// Code generated by wsdl2go. DO NOT EDIT.

package creativeservicesoapbinding

import (
	"encoding/xml"

	"github.com/crazydadz/wsdl2go/soap"
)

// Namespace was auto-generated from WSDL.
var Namespace = "https://www.google.com/apis/ads/publisher/v202102"

// NewCreativeServiceInterface creates an initializes a CreativeServiceInterface.
func NewCreativeServiceInterface(cli *soap.Client) CreativeServiceInterface {
	return &creativeServiceInterface{cli}
}

// CreativeServiceInterface was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type CreativeServiceInterface interface {
	// Creates new {@link Creative} objects.                  @param
	// creatives the creatives to create         @return the created
	// creatives with their IDs filled in
	CreateCreatives(CreateCreatives *CreateCreatives) (*CreateCreativesResponse, error)

	// Gets a {@link CreativePage} of {@link Creative} objects that
	// satisfy the         given {@link Statement#query}. The following
	// fields are supported for         filtering:
	//  <table>         <tr>         <th scope="col">PQL Property</th>
	// <th scope="col">Object Property</th>         </tr>         <tr>
	//         <td>{@code id}</td>         <td>{@link Creative#id}</td>
	//         </tr>         <tr>         <td>{@code name}</td>
	//      <td>{@link Creative#name}</td>         </tr>         <tr>
	//         <td>{@code advertiserId}</td>         <td>{@link Creative#advertiserId}</td>
	//         </tr>         <tr>         <td>{@code width}</td>
	//       <td>{@link Creative#size}</td>         </tr>         <tr>
	//         <td>{@code height}</td>         <td>{@link Creative#size}</td>
	//         </tr>         <tr>         <td>{@code lastModifiedDateTime}</td>
	//         <td>{@link Creative#lastModifiedDateTime}</td>
	//    </tr>         </table>                  @param filterStatement
	// a Publisher Query Language statement used to filter
	// a set of creatives         @return the creatives that match
	// the given filter
	GetCreativesByStatement(GetCreativesByStatement *GetCreativesByStatement) (*GetCreativesByStatementResponse, error)

	// Performs action on {@link Creative} objects that match the given
	// {@link Statement#query}.                  @param creativeAction
	// the action to perform         @param filterStatement a Publisher
	// Query Language statement used to filter a set of creatives
	//        @return the result of the action performed
	PerformCreativeAction(PerformCreativeAction *PerformCreativeAction) (*PerformCreativeActionResponse, error)

	// Updates the specified {@link Creative} objects.
	//      @param creatives the creatives to update         @return
	// the updated creatives
	UpdateCreatives(UpdateCreatives *UpdateCreatives) (*UpdateCreativesResponse, error)
}

// AdIdType was auto-generated from WSDL.
type AdIdType string

// Validate validates AdIdType.
func (v AdIdType) Validate() bool {
	for _, vv := range []string{
		"UNKNOWN",
		"AD_ID",
		"CLEARCAST",
		"NONE",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// ApiVersionErrorReason was auto-generated from WSDL.
type ApiVersionErrorReason string

// Validate validates ApiVersionErrorReason.
func (v ApiVersionErrorReason) Validate() bool {
	for _, vv := range []string{
		"UPDATE_TO_NEWER_VERSION",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// AssetErrorReason was auto-generated from WSDL.
type AssetErrorReason string

// Validate validates AssetErrorReason.
func (v AssetErrorReason) Validate() bool {
	for _, vv := range []string{
		"NON_UNIQUE_NAME",
		"FILE_NAME_TOO_LONG",
		"FILE_SIZE_TOO_LARGE",
		"MISSING_REQUIRED_DYNAMIC_ALLOCATION_CLIENT",
		"MISSING_REQUIRED_DYNAMIC_ALLOCATION_HEIGHT",
		"MISSING_REQUIRED_DYNAMIC_ALLOCATION_WIDTH",
		"MISSING_REQUIRED_DYNAMIC_ALLOCATION_FORMAT",
		"INVALID_CODE_SNIPPET_PARAMETER_VALUE",
		"INVALID_ASSET_ID",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// AuthenticationErrorReason was auto-generated from WSDL.
type AuthenticationErrorReason string

// Validate validates AuthenticationErrorReason.
func (v AuthenticationErrorReason) Validate() bool {
	for _, vv := range []string{
		"AMBIGUOUS_SOAP_REQUEST_HEADER",
		"INVALID_EMAIL",
		"AUTHENTICATION_FAILED",
		"INVALID_OAUTH_SIGNATURE",
		"INVALID_SERVICE",
		"MISSING_SOAP_REQUEST_HEADER",
		"MISSING_AUTHENTICATION_HTTP_HEADER",
		"MISSING_AUTHENTICATION",
		"NETWORK_API_ACCESS_DISABLED",
		"NO_NETWORKS_TO_ACCESS",
		"NETWORK_NOT_FOUND",
		"NETWORK_CODE_REQUIRED",
		"CONNECTION_ERROR",
		"GOOGLE_ACCOUNT_ALREADY_ASSOCIATED_WITH_NETWORK",
		"UNDER_INVESTIGATION",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// CollectionSizeErrorReason was auto-generated from WSDL.
type CollectionSizeErrorReason string

// Validate validates CollectionSizeErrorReason.
func (v CollectionSizeErrorReason) Validate() bool {
	for _, vv := range []string{
		"TOO_LARGE",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// CommonErrorReason was auto-generated from WSDL.
type CommonErrorReason string

// Validate validates CommonErrorReason.
func (v CommonErrorReason) Validate() bool {
	for _, vv := range []string{
		"NOT_FOUND",
		"ALREADY_EXISTS",
		"NOT_APPLICABLE",
		"DUPLICATE_OBJECT",
		"CANNOT_UPDATE",
		"UNSUPPORTED_OPERATION",
		"CONCURRENT_MODIFICATION",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// ConversionEvent was auto-generated from WSDL.
type ConversionEvent string

// Validate validates ConversionEvent.
func (v ConversionEvent) Validate() bool {
	for _, vv := range []string{
		"UNKNOWN",
		"CREATIVE_VIEW",
		"START",
		"SKIP_SHOWN",
		"FIRST_QUARTILE",
		"MIDPOINT",
		"THIRD_QUARTILE",
		"ENGAGED_VIEW",
		"COMPLETE",
		"MUTE",
		"UNMUTE",
		"PAUSE",
		"REWIND",
		"RESUME",
		"SKIPPED",
		"FULLSCREEN",
		"EXPAND",
		"COLLAPSE",
		"ACCEPT_INVITATION",
		"CLOSE",
		"CLICK_TRACKING",
		"SURVEY",
		"CUSTOM_CLICK",
		"MEASURABLE_IMPRESSION",
		"VIEWABLE_IMPRESSION",
		"VIDEO_ABANDON",
		"FULLY_VIEWABLE_AUDIBLE_HALF_DURATION_IMPRESSION",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// CreativeAssetMacroErrorReason was auto-generated from WSDL.
type CreativeAssetMacroErrorReason string

// Validate validates CreativeAssetMacroErrorReason.
func (v CreativeAssetMacroErrorReason) Validate() bool {
	for _, vv := range []string{
		"INVALID_MACRO_NAME",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// CreativeErrorReason was auto-generated from WSDL.
type CreativeErrorReason string

// Validate validates CreativeErrorReason.
func (v CreativeErrorReason) Validate() bool {
	for _, vv := range []string{
		"FLASH_AND_FALLBACK_URL_ARE_SAME",
		"INVALID_INTERNAL_REDIRECT_URL",
		"DESTINATION_URL_REQUIRED",
		"DESTINATION_URL_NOT_EMPTY",
		"DESTINATION_URL_TYPE_NOT_SUPPORTED",
		"CANNOT_CREATE_OR_UPDATE_LEGACY_DFP_CREATIVE",
		"CANNOT_CREATE_OR_UPDATE_LEGACY_DFP_MOBILE_CREATIVE",
		"MISSING_FEATURE",
		"INVALID_COMPANY_TYPE",
		"INVALID_ADSENSE_CREATIVE_SIZE",
		"INVALID_AD_EXCHANGE_CREATIVE_SIZE",
		"DUPLICATE_ASSET_IN_CREATIVE",
		"CREATIVE_ASSET_CANNOT_HAVE_ID_AND_BYTE_ARRAY",
		"CANNOT_CREATE_OR_UPDATE_UNSUPPORTED_CREATIVE",
		"CANNOT_CREATE_PROGRAMMATIC_CREATIVES",
		"INVALID_SIZE_FOR_THIRD_PARTY_IMPRESSION_TRACKER",
		"CANNOT_DEACTIVATE_CREATIVES_IN_CREATIVE_SETS",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// CreativePolicyViolation was auto-generated from WSDL.
type CreativePolicyViolation string

// Validate validates CreativePolicyViolation.
func (v CreativePolicyViolation) Validate() bool {
	for _, vv := range []string{
		"MALWARE_IN_CREATIVE",
		"MALWARE_IN_LANDING_PAGE",
		"LEGALLY_BLOCKED_REDIRECT_URL",
		"MISREPRESENTATION_OF_PRODUCT",
		"SELF_CLICKING_CREATIVE",
		"GAMING_GOOGLE_NETWORK",
		"DYNAMIC_DNS",
		"CIRCUMVENTING_SYSTEMS",
		"PHISHING",
		"DOWNLOAD_PROMPT_IN_CREATIVE",
		"UNAUTHORIZED_COOKIE_DETECTED",
		"TEMPORARY_PAUSE_FOR_VENDOR_INVESTIGATION",
		"ABUSIVE_EXPERIENCE",
		"TRICK_TO_CLICK",
		"USE_OF_NON_ALLOWLISTED_OMID_VERIFICATION_SCRIPT",
		"MISUSE_OF_OMID_API",
		"UNACCEPTABLE_HTML_AD",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// CreativeSetErrorReason was auto-generated from WSDL.
type CreativeSetErrorReason string

// Validate validates CreativeSetErrorReason.
func (v CreativeSetErrorReason) Validate() bool {
	for _, vv := range []string{
		"VIDEO_FEATURE_REQUIRED",
		"CANNOT_CREATE_OR_UPDATE_VIDEO_CREATIVES",
		"ROADBLOCK_FEATURE_REQUIRED",
		"MASTER_CREATIVE_CANNOT_BE_COMPANION",
		"INVALID_ADVERTISER",
		"UPDATE_MASTER_CREATIVE_NOT_ALLOWED",
		"MASTER_CREATIVE_CANNOT_BELONG_TO_MULTIPLE_VIDEO_CREATIVE_SETS",
		"SKIPPABLE_AD_TYPE_NOT_ALLOWED",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// CreativeTemplateErrorReason was auto-generated from WSDL.
type CreativeTemplateErrorReason string

// Validate validates CreativeTemplateErrorReason.
func (v CreativeTemplateErrorReason) Validate() bool {
	for _, vv := range []string{
		"CANNOT_PARSE_CREATIVE_TEMPLATE",
		"VARIABLE_DUPLICATE_UNIQUE_NAME",
		"VARIABLE_INVALID_UNIQUE_NAME",
		"LIST_CHOICE_DUPLICATE_VALUE",
		"LIST_CHOICE_NEEDS_DEFAULT",
		"LIST_CHOICES_EMPTY",
		"NO_TARGET_PLATFORMS",
		"MULTIPLE_TARGET_PLATFORMS",
		"UNRECOGNIZED_PLACEHOLDER",
		"PLACEHOLDERS_NOT_IN_FORMATTER",
		"MISSING_INTERSTITIAL_MACRO",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// CreativeTemplateOperationErrorReason was auto-generated from
// WSDL.
type CreativeTemplateOperationErrorReason string

// Validate validates CreativeTemplateOperationErrorReason.
func (v CreativeTemplateOperationErrorReason) Validate() bool {
	for _, vv := range []string{
		"NOT_ALLOWED",
		"NOT_APPLICABLE",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// CustomCreativeErrorReason was auto-generated from WSDL.
type CustomCreativeErrorReason string

// Validate validates CustomCreativeErrorReason.
func (v CustomCreativeErrorReason) Validate() bool {
	for _, vv := range []string{
		"DUPLICATE_MACRO_NAME_FOR_CREATIVE",
		"SNIPPET_REFERENCES_MISSING_MACRO",
		"UNRECOGNIZED_MACRO",
		"CUSTOM_CREATIVE_NOT_ALLOWED",
		"MISSING_INTERSTITIAL_MACRO",
		"DUPLICATE_ASSET_IN_MACROS",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// CustomFieldValueErrorReason was auto-generated from WSDL.
type CustomFieldValueErrorReason string

// Validate validates CustomFieldValueErrorReason.
func (v CustomFieldValueErrorReason) Validate() bool {
	for _, vv := range []string{
		"CUSTOM_FIELD_NOT_FOUND",
		"CUSTOM_FIELD_INACTIVE",
		"CUSTOM_FIELD_OPTION_NOT_FOUND",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// DeclarationType was auto-generated from WSDL.
type DeclarationType string

// Validate validates DeclarationType.
func (v DeclarationType) Validate() bool {
	for _, vv := range []string{
		"NONE",
		"DECLARED",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// DestinationUrlType was auto-generated from WSDL.
type DestinationUrlType string

// Validate validates DestinationUrlType.
func (v DestinationUrlType) Validate() bool {
	for _, vv := range []string{
		"UNKNOWN",
		"CLICK_TO_WEB",
		"CLICK_TO_APP",
		"CLICK_TO_CALL",
		"NONE",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// EntityLimitReachedErrorReason was auto-generated from WSDL.
type EntityLimitReachedErrorReason string

// Validate validates EntityLimitReachedErrorReason.
func (v EntityLimitReachedErrorReason) Validate() bool {
	for _, vv := range []string{
		"CUSTOM_TARGETING_VALUES_LIMIT_REACHED",
		"AD_EXCLUSION_RULES_LIMIT_REACHED",
		"FIRST_PARTY_AUDIENCE_SEGMENTS_LIMIT_REACHED",
		"PLACEMENTS_LIMIT_REACHED",
		"LINE_ITEMS_LIMIT_REACHED",
		"ACTIVE_LINE_ITEMS_LIMIT_REACHED",
		"DAI_ENCODING_PROFILES_LIMIT_REACHED",
		"TRAFFIC_FORECAST_SEGMENTS_LIMIT_REACHED",
		"FORECAST_ADJUSTMENTS_LIMIT_REACHED",
		"ACTIVE_EXPERIMENTS_LIMIT_REACHED",
		"SITES_LIMIT_REACHED",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// FeatureErrorReason was auto-generated from WSDL.
type FeatureErrorReason string

// Validate validates FeatureErrorReason.
func (v FeatureErrorReason) Validate() bool {
	for _, vv := range []string{
		"MISSING_FEATURE",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// FileErrorReason was auto-generated from WSDL.
type FileErrorReason string

// Validate validates FileErrorReason.
func (v FileErrorReason) Validate() bool {
	for _, vv := range []string{
		"MISSING_CONTENTS",
		"SIZE_TOO_LARGE",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// HtmlBundleProcessorErrorReason was auto-generated from WSDL.
type HtmlBundleProcessorErrorReason string

// Validate validates HtmlBundleProcessorErrorReason.
func (v HtmlBundleProcessorErrorReason) Validate() bool {
	for _, vv := range []string{
		"CANNOT_EXTRACT_FILES_FROM_BUNDLE",
		"CLICK_TAG_HARD_CODED",
		"CLICK_TAG_IN_GWD_UNUPPORTED",
		"CLICK_TAG_NOT_IN_PRIMARY_HTML",
		"CLICK_TAG_INVALID",
		"FILE_SIZE_TOO_LARGE",
		"FILES_TOO_MANY",
		"FLASH_UNSUPPORTED",
		"GWD_COMPONENTS_UNSUPPORTED",
		"GWD_ENABLER_METHODS_UNSUPPORTED",
		"GWD_PROPERTIES_INVALID",
		"LINKED_FILES_NOT_FOUND",
		"PRIMARY_HTML_MISSING",
		"PRIMARY_HTML_UNDETERMINED",
		"SVG_BLOCK_INVALID",
		"CANNOT_DECODE_BUNDLE",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// ImageDensity was auto-generated from WSDL.
type ImageDensity string

// Validate validates ImageDensity.
func (v ImageDensity) Validate() bool {
	for _, vv := range []string{
		"ONE_TO_ONE",
		"THREE_TO_TWO",
		"TWO_TO_ONE",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// ImageErrorReason was auto-generated from WSDL.
type ImageErrorReason string

// Validate validates ImageErrorReason.
func (v ImageErrorReason) Validate() bool {
	for _, vv := range []string{
		"INVALID_IMAGE",
		"INVALID_SIZE",
		"UNEXPECTED_SIZE",
		"OVERLAY_SIZE_TOO_LARGE",
		"ANIMATED_NOT_ALLOWED",
		"ANIMATION_TOO_LONG",
		"CMYK_JPEG_NOT_ALLOWED",
		"FLASH_NOT_ALLOWED",
		"FLASH_WITHOUT_CLICKTAG",
		"ANIMATED_VISUAL_EFFECT",
		"FLASH_ERROR",
		"LAYOUT_PROBLEM",
		"FLASH_HAS_NETWORK_OBJECTS",
		"FLASH_HAS_NETWORK_METHODS",
		"FLASH_HAS_URL",
		"FLASH_HAS_MOUSE_TRACKING",
		"FLASH_HAS_RANDOM_NUM",
		"FLASH_SELF_TARGETS",
		"FLASH_BAD_GETURL_TARGET",
		"FLASH_VERSION_NOT_SUPPORTED",
		"FILE_TOO_LARGE",
		"SYSTEM_ERROR",
		"UNEXPECTED_PRIMARY_ASSET_DENSITY",
		"DUPLICATE_ASSET_DENSITY",
		"MISSING_DEFAULT_ASSET",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// InternalApiErrorReason was auto-generated from WSDL.
type InternalApiErrorReason string

// Validate validates InternalApiErrorReason.
func (v InternalApiErrorReason) Validate() bool {
	for _, vv := range []string{
		"UNEXPECTED_INTERNAL_API_ERROR",
		"TRANSIENT_ERROR",
		"UNKNOWN",
		"DOWNTIME",
		"ERROR_GENERATING_RESPONSE",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// InvalidPhoneNumberErrorReason was auto-generated from WSDL.
type InvalidPhoneNumberErrorReason string

// Validate validates InvalidPhoneNumberErrorReason.
func (v InvalidPhoneNumberErrorReason) Validate() bool {
	for _, vv := range []string{
		"INVALID_FORMAT",
		"TOO_SHORT",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// InvalidUrlErrorReason was auto-generated from WSDL.
type InvalidUrlErrorReason string

// Validate validates InvalidUrlErrorReason.
func (v InvalidUrlErrorReason) Validate() bool {
	for _, vv := range []string{
		"ILLEGAL_CHARACTERS",
		"INVALID_FORMAT",
		"INSECURE_SCHEME",
		"NO_SCHEME",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// LabelEntityAssociationErrorReason was auto-generated from WSDL.
type LabelEntityAssociationErrorReason string

// Validate validates LabelEntityAssociationErrorReason.
func (v LabelEntityAssociationErrorReason) Validate() bool {
	for _, vv := range []string{
		"DUPLICATE_ASSOCIATION",
		"INVALID_ASSOCIATION",
		"NEGATION_NOT_ALLOWED",
		"DUPLICATE_ASSOCIATION_WITH_NEGATION",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// LineItemCreativeAssociationErrorReason was auto-generated from
// WSDL.
type LineItemCreativeAssociationErrorReason string

// Validate validates LineItemCreativeAssociationErrorReason.
func (v LineItemCreativeAssociationErrorReason) Validate() bool {
	for _, vv := range []string{
		"CREATIVE_IN_WRONG_ADVERTISERS_LIBRARY",
		"INVALID_LINEITEM_CREATIVE_PAIRING",
		"STARTDATE_BEFORE_LINEITEM_STARTDATE",
		"STARTDATE_NOT_BEFORE_LINEITEM_ENDDATE",
		"ENDDATE_AFTER_LINEITEM_ENDDATE",
		"ENDDATE_NOT_AFTER_LINEITEM_STARTDATE",
		"ENDDATE_NOT_AFTER_STARTDATE",
		"ENDDATE_IN_THE_PAST",
		"CANNOT_COPY_WITHIN_SAME_LINE_ITEM",
		"UNSUPPORTED_CREATIVE_VAST_REDIRECT_TYPE",
		"UNSUPPORTED_YOUTUBE_HOSTED_CREATIVE",
		"PROGRAMMATIC_CREATIVES_CAN_ONLY_BE_ASSIGNED_TO_ONE_LINE_ITEM",
		"CANNOT_ACTIVATE_ASSOCIATION_WITH_INACTIVE_CREATIVE",
		"CANNOT_CREATE_PROGRAMMATIC_CREATIVES",
		"CANNOT_UPDATE_PROGRAMMATIC_CREATIVES",
		"CREATIVE_AND_LINE_ITEM_MUST_BOTH_BE_SET_TOP_BOX_ENABLED",
		"CANNOT_DELETE_SET_TOP_BOX_ENABLED_ASSOCIATIONS",
		"SET_TOP_BOX_CREATIVE_ROTATION_WEIGHT_MUST_BE_INTEGER",
		"INVALID_CREATIVE_ROTATION_TYPE_FOR_MANUAL_WEIGHT",
		"CLICK_MACROS_REQUIRED",
		"VIEW_MACROS_NOT_ALLOWED",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// LockedOrientation was auto-generated from WSDL.
type LockedOrientation string

// Validate validates LockedOrientation.
func (v LockedOrientation) Validate() bool {
	for _, vv := range []string{
		"UNKNOWN",
		"FREE_ORIENTATION",
		"PORTRAIT_ONLY",
		"LANDSCAPE_ONLY",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// MimeType was auto-generated from WSDL.
type MimeType string

// Validate validates MimeType.
func (v MimeType) Validate() bool {
	for _, vv := range []string{
		"UNKNOWN",
		"ASP",
		"AUDIO_AIFF",
		"AUDIO_BASIC",
		"AUDIO_FLAC",
		"AUDIO_MID",
		"AUDIO_MP3",
		"AUDIO_MP4",
		"AUDIO_MPEG_URL",
		"AUDIO_MS_WMA",
		"AUDIO_OGG",
		"AUDIO_REAL_AUDIO_PLUGIN",
		"AUDIO_WAV",
		"BINARY",
		"DASH",
		"DIRECTOR",
		"FLASH",
		"GRAPHIC_CONVERTER",
		"JAVASCRIPT",
		"JSON",
		"IMAGE_BITMAP",
		"IMAGE_BMP",
		"IMAGE_GIF",
		"IMAGE_JPEG",
		"IMAGE_PHOTOSHOP",
		"IMAGE_PNG",
		"IMAGE_TIFF",
		"IMAGE_WBMP",
		"M3U8",
		"MAC_BIN_HEX_40",
		"MS_EXCEL",
		"MS_POWERPOINT",
		"MS_WORD",
		"OCTET_STREAM",
		"PDF",
		"POSTSCRIPT",
		"RN_REAL_MEDIA",
		"RFC_822",
		"RTF",
		"TEXT_CALENDAR",
		"TEXT_CSS",
		"TEXT_CSV",
		"TEXT_HTML",
		"TEXT_JAVA",
		"TEXT_PLAIN",
		"VIDEO_3GPP",
		"VIDEO_3GPP2",
		"VIDEO_AVI",
		"VIDEO_FLV",
		"VIDEO_MP4",
		"VIDEO_MP4V_ES",
		"VIDEO_MPEG",
		"VIDEO_MS_ASF",
		"VIDEO_MS_WM",
		"VIDEO_MS_WMV",
		"VIDEO_MS_WVX",
		"VIDEO_OGG",
		"VIDEO_QUICKTIME",
		"VIDEO_WEBM",
		"XAML",
		"XHTML",
		"XML",
		"ZIP",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// NotNullErrorReason was auto-generated from WSDL.
type NotNullErrorReason string

// Validate validates NotNullErrorReason.
func (v NotNullErrorReason) Validate() bool {
	for _, vv := range []string{
		"ARG1_NULL",
		"ARG2_NULL",
		"ARG3_NULL",
		"NULL",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// NullErrorReason was auto-generated from WSDL.
type NullErrorReason string

// Validate validates NullErrorReason.
func (v NullErrorReason) Validate() bool {
	for _, vv := range []string{
		"NULL_CONTENT",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// ParseErrorReason was auto-generated from WSDL.
type ParseErrorReason string

// Validate validates ParseErrorReason.
func (v ParseErrorReason) Validate() bool {
	for _, vv := range []string{
		"UNPARSABLE",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// PermissionErrorReason was auto-generated from WSDL.
type PermissionErrorReason string

// Validate validates PermissionErrorReason.
func (v PermissionErrorReason) Validate() bool {
	for _, vv := range []string{
		"PERMISSION_DENIED",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// PublisherQueryLanguageContextErrorReason was auto-generated
// from WSDL.
type PublisherQueryLanguageContextErrorReason string

// Validate validates PublisherQueryLanguageContextErrorReason.
func (v PublisherQueryLanguageContextErrorReason) Validate() bool {
	for _, vv := range []string{
		"UNEXECUTABLE",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// PublisherQueryLanguageSyntaxErrorReason was auto-generated from
// WSDL.
type PublisherQueryLanguageSyntaxErrorReason string

// Validate validates PublisherQueryLanguageSyntaxErrorReason.
func (v PublisherQueryLanguageSyntaxErrorReason) Validate() bool {
	for _, vv := range []string{
		"UNPARSABLE",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// QuotaErrorReason was auto-generated from WSDL.
type QuotaErrorReason string

// Validate validates QuotaErrorReason.
func (v QuotaErrorReason) Validate() bool {
	for _, vv := range []string{
		"EXCEEDED_QUOTA",
		"UNKNOWN",
		"REPORT_JOB_LIMIT",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// RangeErrorReason was auto-generated from WSDL.
type RangeErrorReason string

// Validate validates RangeErrorReason.
func (v RangeErrorReason) Validate() bool {
	for _, vv := range []string{
		"TOO_HIGH",
		"TOO_LOW",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// RequiredCollectionErrorReason was auto-generated from WSDL.
type RequiredCollectionErrorReason string

// Validate validates RequiredCollectionErrorReason.
func (v RequiredCollectionErrorReason) Validate() bool {
	for _, vv := range []string{
		"REQUIRED",
		"TOO_LARGE",
		"TOO_SMALL",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// RequiredErrorReason was auto-generated from WSDL.
type RequiredErrorReason string

// Validate validates RequiredErrorReason.
func (v RequiredErrorReason) Validate() bool {
	for _, vv := range []string{
		"REQUIRED",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// RequiredNumberErrorReason was auto-generated from WSDL.
type RequiredNumberErrorReason string

// Validate validates RequiredNumberErrorReason.
func (v RequiredNumberErrorReason) Validate() bool {
	for _, vv := range []string{
		"REQUIRED",
		"TOO_LARGE",
		"TOO_SMALL",
		"TOO_LARGE_WITH_DETAILS",
		"TOO_SMALL_WITH_DETAILS",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// RequiredSizeErrorReason was auto-generated from WSDL.
type RequiredSizeErrorReason string

// Validate validates RequiredSizeErrorReason.
func (v RequiredSizeErrorReason) Validate() bool {
	for _, vv := range []string{
		"REQUIRED",
		"NOT_ALLOWED",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// RichMediaStudioChildAssetPropertyType was auto-generated from
// WSDL.
type RichMediaStudioChildAssetPropertyType string

// Validate validates RichMediaStudioChildAssetPropertyType.
func (v RichMediaStudioChildAssetPropertyType) Validate() bool {
	for _, vv := range []string{
		"FLASH",
		"VIDEO",
		"IMAGE",
		"DATA",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// RichMediaStudioCreativeArtworkType was auto-generated from WSDL.
type RichMediaStudioCreativeArtworkType string

// Validate validates RichMediaStudioCreativeArtworkType.
func (v RichMediaStudioCreativeArtworkType) Validate() bool {
	for _, vv := range []string{
		"FLASH",
		"HTML5",
		"MIXED",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// RichMediaStudioCreativeBillingAttribute was auto-generated from
// WSDL.
type RichMediaStudioCreativeBillingAttribute string

// Validate validates RichMediaStudioCreativeBillingAttribute.
func (v RichMediaStudioCreativeBillingAttribute) Validate() bool {
	for _, vv := range []string{
		"IN_PAGE",
		"FLOATING_EXPANDING",
		"VIDEO",
		"FLASH_IN_FLASH",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// RichMediaStudioCreativeErrorReason was auto-generated from WSDL.
type RichMediaStudioCreativeErrorReason string

// Validate validates RichMediaStudioCreativeErrorReason.
func (v RichMediaStudioCreativeErrorReason) Validate() bool {
	for _, vv := range []string{
		"CREATION_NOT_ALLOWED",
		"UKNOWN_ERROR",
		"INVALID_CODE_GENERATION_REQUEST",
		"INVALID_CREATIVE_OBJECT",
		"STUDIO_CONNECTION_ERROR",
		"PUSHDOWN_DURATION_NOT_ALLOWED",
		"INVALID_POSITION",
		"INVALID_Z_INDEX",
		"INVALID_PUSHDOWN_DURATION",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// RichMediaStudioCreativeFormat was auto-generated from WSDL.
type RichMediaStudioCreativeFormat string

// Validate validates RichMediaStudioCreativeFormat.
func (v RichMediaStudioCreativeFormat) Validate() bool {
	for _, vv := range []string{
		"IN_PAGE",
		"EXPANDING",
		"IM_EXPANDING",
		"FLOATING",
		"PEEL_DOWN",
		"IN_PAGE_WITH_FLOATING",
		"FLASH_IN_FLASH",
		"FLASH_IN_FLASH_EXPANDING",
		"IN_APP",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// ScalableType was auto-generated from WSDL.
type ScalableType string

// Validate validates ScalableType.
func (v ScalableType) Validate() bool {
	for _, vv := range []string{
		"UNKNOWN",
		"NOT_SCALABLE",
		"RATIO_SCALABLE",
		"STRETCH_SCALABLE",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// ServerErrorReason was auto-generated from WSDL.
type ServerErrorReason string

// Validate validates ServerErrorReason.
func (v ServerErrorReason) Validate() bool {
	for _, vv := range []string{
		"SERVER_ERROR",
		"SERVER_BUSY",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// SetTopBoxCreativeErrorReason was auto-generated from WSDL.
type SetTopBoxCreativeErrorReason string

// Validate validates SetTopBoxCreativeErrorReason.
func (v SetTopBoxCreativeErrorReason) Validate() bool {
	for _, vv := range []string{
		"EXTERNAL_ASSET_ID_IMMUTABLE",
		"EXTERNAL_ASSET_ID_REQUIRED",
		"PROVIDER_ID_IMMUTABLE",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// SkippableAdType was auto-generated from WSDL.
type SkippableAdType string

// Validate validates SkippableAdType.
func (v SkippableAdType) Validate() bool {
	for _, vv := range []string{
		"UNKNOWN",
		"DISABLED",
		"ENABLED",
		"INSTREAM_SELECT",
		"ANY",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// SslManualOverride was auto-generated from WSDL.
type SslManualOverride string

// Validate validates SslManualOverride.
func (v SslManualOverride) Validate() bool {
	for _, vv := range []string{
		"UNKNOWN",
		"NO_OVERRIDE",
		"SSL_COMPATIBLE",
		"NOT_SSL_COMPATIBLE",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// SslScanResult was auto-generated from WSDL.
type SslScanResult string

// Validate validates SslScanResult.
func (v SslScanResult) Validate() bool {
	for _, vv := range []string{
		"UNKNOWN",
		"UNSCANNED",
		"SCANNED_SSL",
		"SCANNED_NON_SSL",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// StatementErrorReason was auto-generated from WSDL.
type StatementErrorReason string

// Validate validates StatementErrorReason.
func (v StatementErrorReason) Validate() bool {
	for _, vv := range []string{
		"VARIABLE_NOT_BOUND_TO_VALUE",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// StringFormatErrorReason was auto-generated from WSDL.
type StringFormatErrorReason string

// Validate validates StringFormatErrorReason.
func (v StringFormatErrorReason) Validate() bool {
	for _, vv := range []string{
		"UNKNOWN",
		"ILLEGAL_CHARS",
		"INVALID_FORMAT",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// StringLengthErrorReason was auto-generated from WSDL.
type StringLengthErrorReason string

// Validate validates StringLengthErrorReason.
func (v StringLengthErrorReason) Validate() bool {
	for _, vv := range []string{
		"TOO_LONG",
		"TOO_SHORT",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// SwiffyConversionErrorReason was auto-generated from WSDL.
type SwiffyConversionErrorReason string

// Validate validates SwiffyConversionErrorReason.
func (v SwiffyConversionErrorReason) Validate() bool {
	for _, vv := range []string{
		"SERVER_ERROR",
		"INVALID_FLASH_FILE",
		"UNSUPPORTED_FLASH",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// TemplateInstantiatedCreativeErrorReason was auto-generated from
// WSDL.
type TemplateInstantiatedCreativeErrorReason string

// Validate validates TemplateInstantiatedCreativeErrorReason.
func (v TemplateInstantiatedCreativeErrorReason) Validate() bool {
	for _, vv := range []string{
		"INACTIVE_CREATIVE_TEMPLATE",
		"FILE_TYPE_NOT_ALLOWED",
		"UNKNOWN",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// VastRedirectType was auto-generated from WSDL.
type VastRedirectType string

// Validate validates VastRedirectType.
func (v VastRedirectType) Validate() bool {
	for _, vv := range []string{
		"LINEAR",
		"NON_LINEAR",
		"LINEAR_AND_NON_LINEAR",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// VideoDeliveryType was auto-generated from WSDL.
type VideoDeliveryType string

// Validate validates VideoDeliveryType.
func (v VideoDeliveryType) Validate() bool {
	for _, vv := range []string{
		"UNKNOWN",
		"PROGRESSIVE",
		"STREAMING",
	} {
		if string(v) == vv {
			return true
		}
		// Original Code
		//if reflect.DeepEqual(v, vv) {
		// 	return true
		//}
	}
	return false
}

// The action used for activating {@link Creative} objects.
type ActivateCreatives struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ActivateCreatives) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ActivateCreatives"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// An Ad Exchange dynamic allocation creative.
type AdExchangeCreative struct {
	AdvertiserId              *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	CodeSnippet               *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 codeSnippet,omitempty" json:"codeSnippet,omitempty" yaml:"codeSnippet,omitempty"`
	IsNativeEligible          *bool                      `xml:"https://www.google.com/apis/ads/publisher/v202102 isNativeEligible,omitempty" json:"isNativeEligible,omitempty" yaml:"isNativeEligible,omitempty"`
	IsInterstitial            *bool                      `xml:"https://www.google.com/apis/ads/publisher/v202102 isInterstitial,omitempty" json:"isInterstitial,omitempty" yaml:"isInterstitial,omitempty"`
	TypeAttrXSI               string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AdExchangeCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AdExchangeCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// An AdSense dynamic allocation creative.
type AdSenseCreative struct {
	AdvertiserId              *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	CodeSnippet               *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 codeSnippet,omitempty" json:"codeSnippet,omitempty" yaml:"codeSnippet,omitempty"`
	TypeAttrXSI               string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AdSenseCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AdSenseCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// The API error base class that provides details about an error
// that occurred             while processing a service request.
//                          <p>The OGNL field path is provided
// for parsers to identify the request data             element
// that may have caused the error.</p>
type ApiError struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *ApiError) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case ApiVersionError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case AssetError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case AuthenticationError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case CollectionSizeError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case CommonError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case CreativeAssetMacroError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case CreativeError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case CreativeSetError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case CreativeTemplateError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case CreativeTemplateOperationError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case CustomCreativeError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case CustomFieldValueError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case EntityLimitReachedError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case FeatureError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case FileError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case HtmlBundleProcessorError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ImageError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case InternalApiError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case InvalidPhoneNumberError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case InvalidUrlError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case LabelEntityAssociationError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case LineItemCreativeAssociationError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case NotNullError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case NullError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ParseError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case PermissionError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case PublisherQueryLanguageContextError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case PublisherQueryLanguageSyntaxError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case QuotaError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case RangeError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case RequiredCollectionError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case RequiredError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case RequiredNumberError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case RequiredSizeError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case RichMediaStudioCreativeError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ServerError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case SetTopBoxCreativeError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case StatementError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case StringFormatError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case StringLengthError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case SwiffyConversionError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case TemplateInstantiatedCreativeError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case TypeError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case UniqueError:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for ApiError.
func (t *ApiError) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for ApiError.
func (t *ApiError) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := ApiError{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "ApiVersionError":
				tt.Value = new(ApiVersionError)
			case "AssetError":
				tt.Value = new(AssetError)
			case "AuthenticationError":
				tt.Value = new(AuthenticationError)
			case "CollectionSizeError":
				tt.Value = new(CollectionSizeError)
			case "CommonError":
				tt.Value = new(CommonError)
			case "CreativeAssetMacroError":
				tt.Value = new(CreativeAssetMacroError)
			case "CreativeError":
				tt.Value = new(CreativeError)
			case "CreativeSetError":
				tt.Value = new(CreativeSetError)
			case "CreativeTemplateError":
				tt.Value = new(CreativeTemplateError)
			case "CreativeTemplateOperationError":
				tt.Value = new(CreativeTemplateOperationError)
			case "CustomCreativeError":
				tt.Value = new(CustomCreativeError)
			case "CustomFieldValueError":
				tt.Value = new(CustomFieldValueError)
			case "EntityLimitReachedError":
				tt.Value = new(EntityLimitReachedError)
			case "FeatureError":
				tt.Value = new(FeatureError)
			case "FileError":
				tt.Value = new(FileError)
			case "HtmlBundleProcessorError":
				tt.Value = new(HtmlBundleProcessorError)
			case "ImageError":
				tt.Value = new(ImageError)
			case "InternalApiError":
				tt.Value = new(InternalApiError)
			case "InvalidPhoneNumberError":
				tt.Value = new(InvalidPhoneNumberError)
			case "InvalidUrlError":
				tt.Value = new(InvalidUrlError)
			case "LabelEntityAssociationError":
				tt.Value = new(LabelEntityAssociationError)
			case "LineItemCreativeAssociationError":
				tt.Value = new(LineItemCreativeAssociationError)
			case "NotNullError":
				tt.Value = new(NotNullError)
			case "NullError":
				tt.Value = new(NullError)
			case "ParseError":
				tt.Value = new(ParseError)
			case "PermissionError":
				tt.Value = new(PermissionError)
			case "PublisherQueryLanguageContextError":
				tt.Value = new(PublisherQueryLanguageContextError)
			case "PublisherQueryLanguageSyntaxError":
				tt.Value = new(PublisherQueryLanguageSyntaxError)
			case "QuotaError":
				tt.Value = new(QuotaError)
			case "RangeError":
				tt.Value = new(RangeError)
			case "RequiredCollectionError":
				tt.Value = new(RequiredCollectionError)
			case "RequiredError":
				tt.Value = new(RequiredError)
			case "RequiredNumberError":
				tt.Value = new(RequiredNumberError)
			case "RequiredSizeError":
				tt.Value = new(RequiredSizeError)
			case "RichMediaStudioCreativeError":
				tt.Value = new(RichMediaStudioCreativeError)
			case "ServerError":
				tt.Value = new(ServerError)
			case "SetTopBoxCreativeError":
				tt.Value = new(SetTopBoxCreativeError)
			case "StatementError":
				tt.Value = new(StatementError)
			case "StringFormatError":
				tt.Value = new(StringFormatError)
			case "StringLengthError":
				tt.Value = new(StringLengthError)
			case "SwiffyConversionError":
				tt.Value = new(SwiffyConversionError)
			case "TemplateInstantiatedCreativeError":
				tt.Value = new(TemplateInstantiatedCreativeError)
			case "TypeError":
				tt.Value = new(TypeError)
			case "UniqueError":
				tt.Value = new(UniqueError)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// Exception class for holding a list of service errors.
type ApiException struct {
	Message       *string     `xml:"https://www.google.com/apis/ads/publisher/v202102 message,omitempty" json:"message,omitempty" yaml:"message,omitempty"`
	Errors        []*ApiError `xml:"https://www.google.com/apis/ads/publisher/v202102 errors,omitempty" json:"errors,omitempty" yaml:"errors,omitempty"`
	TypeAttrXSI   string      `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string      `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ApiException) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ApiException"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Errors related to the usage of API versions.
type ApiVersionError struct {
	FieldPath         *string                `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement    `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *ApiVersionErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ApiVersionError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ApiVersionError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Base class for exceptions.
type ApplicationException struct {
	Message *string `xml:"https://www.google.com/apis/ads/publisher/v202102 message,omitempty" json:"message,omitempty" yaml:"message,omitempty"`
}

// Represents a {@link Label} that can be applied to an entity.
// To negate an inherited label, create             an {@code AppliedLabel}
// with {@code labelId} as the inherited label's ID and {@code
// isNegated}             set to true.
type AppliedLabel struct {
	LabelId   *int64 `xml:"https://www.google.com/apis/ads/publisher/v202102 labelId,omitempty" json:"labelId,omitempty" yaml:"labelId,omitempty"`
	IsNegated *bool  `xml:"https://www.google.com/apis/ads/publisher/v202102 isNegated,omitempty" json:"isNegated,omitempty" yaml:"isNegated,omitempty"`
}

// A {@code Creative} intended for mobile platforms that displays
// an image,             whose {@link LineItem#creativePlaceholders
// size} is defined as an             {@link CreativeSizeType#ASPECT_RATIO
// aspect ratio}, i.e.             {@link Size#isAspectRatio}.
// It can have multiple images whose dimensions             conform
// to that aspect ratio.
type AspectRatioImageCreative struct {
	AdvertiserId              *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	DestinationUrl            *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	DestinationUrlType        *DestinationUrlType        `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrlType,omitempty" json:"destinationUrlType,omitempty" yaml:"destinationUrlType,omitempty"`
	ImageAssets               []*CreativeAsset           `xml:"https://www.google.com/apis/ads/publisher/v202102 imageAssets,omitempty" json:"imageAssets,omitempty" yaml:"imageAssets,omitempty"`
	AltText                   *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 altText,omitempty" json:"altText,omitempty" yaml:"altText,omitempty"`
	ThirdPartyImpressionUrl   *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyImpressionUrl,omitempty" json:"thirdPartyImpressionUrl,omitempty" yaml:"thirdPartyImpressionUrl,omitempty"`
	OverrideSize              *bool                      `xml:"https://www.google.com/apis/ads/publisher/v202102 overrideSize,omitempty" json:"overrideSize,omitempty" yaml:"overrideSize,omitempty"`
	TypeAttrXSI               string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AspectRatioImageCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AspectRatioImageCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Base asset properties.
type Asset struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *Asset) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case VideoRedirectAsset:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for Asset.
func (t *Asset) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for Asset.
func (t *Asset) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := Asset{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "VideoRedirectAsset":
				tt.Value = new(VideoRedirectAsset)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// Stores values of {@link CreativeTemplateVariable} of {@link
// VariableType#ASSET}.
type AssetCreativeTemplateVariableValue struct {
	UniqueName    *string        `xml:"https://www.google.com/apis/ads/publisher/v202102 uniqueName,omitempty" json:"uniqueName,omitempty" yaml:"uniqueName,omitempty"`
	Asset         *CreativeAsset `xml:"https://www.google.com/apis/ads/publisher/v202102 asset,omitempty" json:"asset,omitempty" yaml:"asset,omitempty"`
	TypeAttrXSI   string         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AssetCreativeTemplateVariableValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AssetCreativeTemplateVariableValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Lists all errors associated with assets.
type AssetError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *AssetErrorReason   `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AssetError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AssetError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that contains Ad Manager hosted audio ads
// and is served via VAST XML. This             creative is read-only.
type AudioCreative struct {
	AdvertiserId              *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation              `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel                         `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                               `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration              `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	DestinationUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	DestinationUrlType        *DestinationUrlType                     `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrlType,omitempty" json:"destinationUrlType,omitempty" yaml:"destinationUrlType,omitempty"`
	Duration                  *int                                    `xml:"https://www.google.com/apis/ads/publisher/v202102 duration,omitempty" json:"duration,omitempty" yaml:"duration,omitempty"`
	AllowDurationOverride     *bool                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 allowDurationOverride,omitempty" json:"allowDurationOverride,omitempty" yaml:"allowDurationOverride,omitempty"`
	TrackingUrls              []*ConversionEvent_TrackingUrlsMapEntry `xml:"https://www.google.com/apis/ads/publisher/v202102 trackingUrls,omitempty" json:"trackingUrls,omitempty" yaml:"trackingUrls,omitempty"`
	CompanionCreativeIds      []*int64                                `xml:"https://www.google.com/apis/ads/publisher/v202102 companionCreativeIds,omitempty" json:"companionCreativeIds,omitempty" yaml:"companionCreativeIds,omitempty"`
	CustomParameters          *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customParameters,omitempty" json:"customParameters,omitempty" yaml:"customParameters,omitempty"`
	AdId                      *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 adId,omitempty" json:"adId,omitempty" yaml:"adId,omitempty"`
	AdIdType                  *AdIdType                               `xml:"https://www.google.com/apis/ads/publisher/v202102 adIdType,omitempty" json:"adIdType,omitempty" yaml:"adIdType,omitempty"`
	SkippableAdType           *SkippableAdType                        `xml:"https://www.google.com/apis/ads/publisher/v202102 skippableAdType,omitempty" json:"skippableAdType,omitempty" yaml:"skippableAdType,omitempty"`
	VastPreviewUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 vastPreviewUrl,omitempty" json:"vastPreviewUrl,omitempty" yaml:"vastPreviewUrl,omitempty"`
	SslScanResult             *SslScanResult                          `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride         *SslManualOverride                      `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	TypeAttrXSI               string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AudioCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AudioCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that contains externally hosted audio ads
// and is served via VAST XML.
type AudioRedirectCreative struct {
	AdvertiserId              *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation              `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel                         `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                               `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration              `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	DestinationUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	DestinationUrlType        *DestinationUrlType                     `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrlType,omitempty" json:"destinationUrlType,omitempty" yaml:"destinationUrlType,omitempty"`
	Duration                  *int                                    `xml:"https://www.google.com/apis/ads/publisher/v202102 duration,omitempty" json:"duration,omitempty" yaml:"duration,omitempty"`
	AllowDurationOverride     *bool                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 allowDurationOverride,omitempty" json:"allowDurationOverride,omitempty" yaml:"allowDurationOverride,omitempty"`
	TrackingUrls              []*ConversionEvent_TrackingUrlsMapEntry `xml:"https://www.google.com/apis/ads/publisher/v202102 trackingUrls,omitempty" json:"trackingUrls,omitempty" yaml:"trackingUrls,omitempty"`
	CompanionCreativeIds      []*int64                                `xml:"https://www.google.com/apis/ads/publisher/v202102 companionCreativeIds,omitempty" json:"companionCreativeIds,omitempty" yaml:"companionCreativeIds,omitempty"`
	CustomParameters          *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customParameters,omitempty" json:"customParameters,omitempty" yaml:"customParameters,omitempty"`
	AdId                      *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 adId,omitempty" json:"adId,omitempty" yaml:"adId,omitempty"`
	AdIdType                  *AdIdType                               `xml:"https://www.google.com/apis/ads/publisher/v202102 adIdType,omitempty" json:"adIdType,omitempty" yaml:"adIdType,omitempty"`
	SkippableAdType           *SkippableAdType                        `xml:"https://www.google.com/apis/ads/publisher/v202102 skippableAdType,omitempty" json:"skippableAdType,omitempty" yaml:"skippableAdType,omitempty"`
	VastPreviewUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 vastPreviewUrl,omitempty" json:"vastPreviewUrl,omitempty" yaml:"vastPreviewUrl,omitempty"`
	SslScanResult             *SslScanResult                          `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride         *SslManualOverride                      `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	AudioAssets               []*VideoRedirectAsset                   `xml:"https://www.google.com/apis/ads/publisher/v202102 audioAssets,omitempty" json:"audioAssets,omitempty" yaml:"audioAssets,omitempty"`
	MezzanineFile             *VideoRedirectAsset                     `xml:"https://www.google.com/apis/ads/publisher/v202102 mezzanineFile,omitempty" json:"mezzanineFile,omitempty" yaml:"mezzanineFile,omitempty"`
	TypeAttrXSI               string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AudioRedirectCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AudioRedirectCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// An error for an exception that occurred when authenticating.
type AuthenticationError struct {
	FieldPath         *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement        `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *AuthenticationErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AuthenticationError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AuthenticationError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A base type for audio creatives.
type BaseAudioCreative struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *BaseAudioCreative) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case AudioCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case AudioRedirectCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for BaseAudioCreative.
func (t *BaseAudioCreative) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for BaseAudioCreative.
func (t *BaseAudioCreative) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := BaseAudioCreative{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "AudioCreative":
				tt.Value = new(AudioCreative)
			case "AudioRedirectCreative":
				tt.Value = new(AudioRedirectCreative)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// A base class for storing values of the {@link CreativeTemplateVariable}.
type BaseCreativeTemplateVariableValue struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *BaseCreativeTemplateVariableValue) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case AssetCreativeTemplateVariableValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case LongCreativeTemplateVariableValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case StringCreativeTemplateVariableValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case UrlCreativeTemplateVariableValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for BaseCreativeTemplateVariableValue.
func (t *BaseCreativeTemplateVariableValue) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for BaseCreativeTemplateVariableValue.
func (t *BaseCreativeTemplateVariableValue) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := BaseCreativeTemplateVariableValue{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "AssetCreativeTemplateVariableValue":
				tt.Value = new(AssetCreativeTemplateVariableValue)
			case "LongCreativeTemplateVariableValue":
				tt.Value = new(LongCreativeTemplateVariableValue)
			case "StringCreativeTemplateVariableValue":
				tt.Value = new(StringCreativeTemplateVariableValue)
			case "UrlCreativeTemplateVariableValue":
				tt.Value = new(UrlCreativeTemplateVariableValue)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// The value of a {@link CustomField} for a particular entity.
type BaseCustomFieldValue struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *BaseCustomFieldValue) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case CustomFieldValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case DropDownCustomFieldValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for BaseCustomFieldValue.
func (t *BaseCustomFieldValue) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for BaseCustomFieldValue.
func (t *BaseCustomFieldValue) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := BaseCustomFieldValue{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "CustomFieldValue":
				tt.Value = new(CustomFieldValue)
			case "DropDownCustomFieldValue":
				tt.Value = new(DropDownCustomFieldValue)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// A base class for dynamic allocation creatives.
type BaseDynamicAllocationCreative struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *BaseDynamicAllocationCreative) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case AdExchangeCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case AdSenseCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for BaseDynamicAllocationCreative.
func (t *BaseDynamicAllocationCreative) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for BaseDynamicAllocationCreative.
func (t *BaseDynamicAllocationCreative) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := BaseDynamicAllocationCreative{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "AdExchangeCreative":
				tt.Value = new(AdExchangeCreative)
			case "AdSenseCreative":
				tt.Value = new(AdSenseCreative)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// The base type for creatives that display an image.
type BaseImageCreative struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *BaseImageCreative) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case ImageCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ImageOverlayCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for BaseImageCreative.
func (t *BaseImageCreative) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for BaseImageCreative.
func (t *BaseImageCreative) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := BaseImageCreative{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "ImageCreative":
				tt.Value = new(ImageCreative)
			case "ImageOverlayCreative":
				tt.Value = new(ImageOverlayCreative)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// The base type for creatives that load an image asset from a
// specified URL.
type BaseImageRedirectCreative struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *BaseImageRedirectCreative) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case ImageRedirectCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ImageRedirectOverlayCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for BaseImageRedirectCreative.
func (t *BaseImageRedirectCreative) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for BaseImageRedirectCreative.
func (t *BaseImageRedirectCreative) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := BaseImageRedirectCreative{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "ImageRedirectCreative":
				tt.Value = new(ImageRedirectCreative)
			case "ImageRedirectOverlayCreative":
				tt.Value = new(ImageRedirectOverlayCreative)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// A {@code Creative} that is created by a Rich Media Studio.
type BaseRichMediaStudioCreative struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *BaseRichMediaStudioCreative) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case RichMediaStudioCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for BaseRichMediaStudioCreative.
func (t *BaseRichMediaStudioCreative) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for BaseRichMediaStudioCreative.
func (t *BaseRichMediaStudioCreative) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := BaseRichMediaStudioCreative{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "RichMediaStudioCreative":
				tt.Value = new(RichMediaStudioCreative)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// A base type for video creatives.
type BaseVideoCreative struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *BaseVideoCreative) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case SetTopBoxCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case VideoCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case VideoRedirectCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for BaseVideoCreative.
func (t *BaseVideoCreative) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for BaseVideoCreative.
func (t *BaseVideoCreative) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := BaseVideoCreative{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "SetTopBoxCreative":
				tt.Value = new(SetTopBoxCreative)
			case "VideoCreative":
				tt.Value = new(VideoCreative)
			case "VideoRedirectCreative":
				tt.Value = new(VideoRedirectCreative)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// Contains a boolean value.
type BooleanValue struct {
	Value         *bool  `xml:"https://www.google.com/apis/ads/publisher/v202102 value,omitempty" json:"value,omitempty" yaml:"value,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *BooleanValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:BooleanValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Click tags define click-through URLs for each exit on an HTML5
// creative. An exit is any             area that can be clicked
// that directs the browser to a landing page. Each click tag defines
//             the click-through URL for a different exit. In Ad
// Manager, tracking pixels are attached to the             click
// tags if URLs are valid.
type ClickTag struct {
	Name *string `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Url  *string `xml:"https://www.google.com/apis/ads/publisher/v202102 url,omitempty" json:"url,omitempty" yaml:"url,omitempty"`
}

// A creative that is used for tracking clicks on ads that are
// served directly             from the customers' web servers
// or media servers.             NOTE: The size attribute is not
// used for click tracking creative and it will             not
// be persisted upon save.
type ClickTrackingCreative struct {
	AdvertiserId              *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	ClickTrackingUrl          *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 clickTrackingUrl,omitempty" json:"clickTrackingUrl,omitempty" yaml:"clickTrackingUrl,omitempty"`
	TypeAttrXSI               string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ClickTrackingCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ClickTrackingCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Error for the size of the collection being too large
type CollectionSizeError struct {
	FieldPath         *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement        `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *CollectionSizeErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CollectionSizeError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CollectionSizeError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A place for common errors that can be used across services.
type CommonError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *CommonErrorReason  `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CommonError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CommonError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// This represents an entry in a map with a key of type ConversionEvent
//             and value of type TrackingUrls.
type ConversionEvent_TrackingUrlsMapEntry struct {
	Key   *ConversionEvent `xml:"https://www.google.com/apis/ads/publisher/v202102 key,omitempty" json:"key,omitempty" yaml:"key,omitempty"`
	Value *TrackingUrls    `xml:"https://www.google.com/apis/ads/publisher/v202102 value,omitempty" json:"value,omitempty" yaml:"value,omitempty"`
}

// A {@code Creative} represents the media for the ad being served.
//                          <p>Read more about creatives on the
//             <a href="https://support.google.com/dfp_premium/answer/3185155">Ad
// Manager Help Center</a>.</p>
type Creative struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *Creative) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case AdExchangeCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case AdSenseCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case AspectRatioImageCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case AudioCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case AudioRedirectCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ClickTrackingCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case CustomCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case Html5Creative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ImageCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ImageOverlayCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ImageRedirectCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ImageRedirectOverlayCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case InternalRedirectCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case LegacyDfpCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ProgrammaticCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case RichMediaStudioCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case SetTopBoxCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case TemplateCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ThirdPartyCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case UnsupportedCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case VastRedirectCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case VideoCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case VideoRedirectCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for Creative.
func (t *Creative) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for Creative.
func (t *Creative) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := Creative{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "AdExchangeCreative":
				tt.Value = new(AdExchangeCreative)
			case "AdSenseCreative":
				tt.Value = new(AdSenseCreative)
			case "AspectRatioImageCreative":
				tt.Value = new(AspectRatioImageCreative)
			case "AudioCreative":
				tt.Value = new(AudioCreative)
			case "AudioRedirectCreative":
				tt.Value = new(AudioRedirectCreative)
			case "ClickTrackingCreative":
				tt.Value = new(ClickTrackingCreative)
			case "CustomCreative":
				tt.Value = new(CustomCreative)
			case "Html5Creative":
				tt.Value = new(Html5Creative)
			case "ImageCreative":
				tt.Value = new(ImageCreative)
			case "ImageOverlayCreative":
				tt.Value = new(ImageOverlayCreative)
			case "ImageRedirectCreative":
				tt.Value = new(ImageRedirectCreative)
			case "ImageRedirectOverlayCreative":
				tt.Value = new(ImageRedirectOverlayCreative)
			case "InternalRedirectCreative":
				tt.Value = new(InternalRedirectCreative)
			case "LegacyDfpCreative":
				tt.Value = new(LegacyDfpCreative)
			case "ProgrammaticCreative":
				tt.Value = new(ProgrammaticCreative)
			case "RichMediaStudioCreative":
				tt.Value = new(RichMediaStudioCreative)
			case "SetTopBoxCreative":
				tt.Value = new(SetTopBoxCreative)
			case "TemplateCreative":
				tt.Value = new(TemplateCreative)
			case "ThirdPartyCreative":
				tt.Value = new(ThirdPartyCreative)
			case "UnsupportedCreative":
				tt.Value = new(UnsupportedCreative)
			case "VastRedirectCreative":
				tt.Value = new(VastRedirectCreative)
			case "VideoCreative":
				tt.Value = new(VideoCreative)
			case "VideoRedirectCreative":
				tt.Value = new(VideoRedirectCreative)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// Represents the actions that can be performed on {@link Creative}
// objects.
type CreativeAction struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *CreativeAction) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case ActivateCreatives:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case DeactivateCreatives:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for CreativeAction.
func (t *CreativeAction) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for CreativeAction.
func (t *CreativeAction) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := CreativeAction{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "ActivateCreatives":
				tt.Value = new(ActivateCreatives)
			case "DeactivateCreatives":
				tt.Value = new(DeactivateCreatives)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// A {@code CreativeAsset} is an asset that can be used in creatives.
type CreativeAsset struct {
	AssetId        *int64        `xml:"https://www.google.com/apis/ads/publisher/v202102 assetId,omitempty" json:"assetId,omitempty" yaml:"assetId,omitempty"`
	AssetByteArray *[]byte       `xml:"https://www.google.com/apis/ads/publisher/v202102 assetByteArray,omitempty" json:"assetByteArray,omitempty" yaml:"assetByteArray,omitempty"`
	FileName       *string       `xml:"https://www.google.com/apis/ads/publisher/v202102 fileName,omitempty" json:"fileName,omitempty" yaml:"fileName,omitempty"`
	FileSize       *int64        `xml:"https://www.google.com/apis/ads/publisher/v202102 fileSize,omitempty" json:"fileSize,omitempty" yaml:"fileSize,omitempty"`
	AssetUrl       *string       `xml:"https://www.google.com/apis/ads/publisher/v202102 assetUrl,omitempty" json:"assetUrl,omitempty" yaml:"assetUrl,omitempty"`
	Size           *Size         `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	ClickTags      []*ClickTag   `xml:"https://www.google.com/apis/ads/publisher/v202102 clickTags,omitempty" json:"clickTags,omitempty" yaml:"clickTags,omitempty"`
	ImageDensity   *ImageDensity `xml:"https://www.google.com/apis/ads/publisher/v202102 imageDensity,omitempty" json:"imageDensity,omitempty" yaml:"imageDensity,omitempty"`
}

// Lists all errors associated with creative asset macros.
type CreativeAssetMacroError struct {
	FieldPath         *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement            `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *CreativeAssetMacroErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreativeAssetMacroError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreativeAssetMacroError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Lists all errors associated with creatives.
type CreativeError struct {
	FieldPath         *string              `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement  `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string              `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string              `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *CreativeErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreativeError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreativeError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Captures a page of {@link Creative} objects.
type CreativePage struct {
	TotalResultSetSize *int        `xml:"https://www.google.com/apis/ads/publisher/v202102 totalResultSetSize,omitempty" json:"totalResultSetSize,omitempty" yaml:"totalResultSetSize,omitempty"`
	StartIndex         *int        `xml:"https://www.google.com/apis/ads/publisher/v202102 startIndex,omitempty" json:"startIndex,omitempty" yaml:"startIndex,omitempty"`
	Results            []*Creative `xml:"https://www.google.com/apis/ads/publisher/v202102 results,omitempty" json:"results,omitempty" yaml:"results,omitempty"`
}

// Errors relating to creative sets & subclasses.
type CreativeSetError struct {
	FieldPath         *string                 `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement     `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                 `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                 `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *CreativeSetErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreativeSetError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreativeSetError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A catch-all error that lists all generic errors associated with
// CreativeTemplate.
type CreativeTemplateError struct {
	FieldPath         *string                      `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement          `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                      `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                      `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *CreativeTemplateErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreativeTemplateError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreativeTemplateError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// An error that can occur while performing an operation on a creative
// template.
type CreativeTemplateOperationError struct {
	FieldPath         *string                               `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement                   `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                               `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                               `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *CreativeTemplateOperationErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CreativeTemplateOperationError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CreativeTemplateOperationError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that contains an arbitrary HTML snippet and
// file assets.
type CustomCreative struct {
	AdvertiserId                     *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                               *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                             *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                             *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                       *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels                     []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels                    []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime             *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues                []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration        *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	DestinationUrl                   *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	DestinationUrlType               *DestinationUrlType        `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrlType,omitempty" json:"destinationUrlType,omitempty" yaml:"destinationUrlType,omitempty"`
	HtmlSnippet                      *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 htmlSnippet,omitempty" json:"htmlSnippet,omitempty" yaml:"htmlSnippet,omitempty"`
	CustomCreativeAssets             []*CustomCreativeAsset     `xml:"https://www.google.com/apis/ads/publisher/v202102 customCreativeAssets,omitempty" json:"customCreativeAssets,omitempty" yaml:"customCreativeAssets,omitempty"`
	IsInterstitial                   *bool                      `xml:"https://www.google.com/apis/ads/publisher/v202102 isInterstitial,omitempty" json:"isInterstitial,omitempty" yaml:"isInterstitial,omitempty"`
	LockedOrientation                *LockedOrientation         `xml:"https://www.google.com/apis/ads/publisher/v202102 lockedOrientation,omitempty" json:"lockedOrientation,omitempty" yaml:"lockedOrientation,omitempty"`
	SslScanResult                    *SslScanResult             `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride                *SslManualOverride         `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	IsSafeFrameCompatible            *bool                      `xml:"https://www.google.com/apis/ads/publisher/v202102 isSafeFrameCompatible,omitempty" json:"isSafeFrameCompatible,omitempty" yaml:"isSafeFrameCompatible,omitempty"`
	ThirdPartyImpressionTrackingUrls []*string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyImpressionTrackingUrls,omitempty" json:"thirdPartyImpressionTrackingUrls,omitempty" yaml:"thirdPartyImpressionTrackingUrls,omitempty"`
	TypeAttrXSI                      string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                    string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CustomCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CustomCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code CustomCreativeAsset} is an association between a
//           {@link CustomCreative} and an asset. Any assets that
// are associated with a             creative can be inserted into
// its HTML snippet.
type CustomCreativeAsset struct {
	MacroName *string        `xml:"https://www.google.com/apis/ads/publisher/v202102 macroName,omitempty" json:"macroName,omitempty" yaml:"macroName,omitempty"`
	Asset     *CreativeAsset `xml:"https://www.google.com/apis/ads/publisher/v202102 asset,omitempty" json:"asset,omitempty" yaml:"asset,omitempty"`
}

// Lists all errors associated with custom creatives.
type CustomCreativeError struct {
	FieldPath         *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement        `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *CustomCreativeErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CustomCreativeError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CustomCreativeError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// The value of a {@link CustomField} that does not have a {@link
// CustomField#dataType}             of {@link CustomFieldDataType#DROP_DOWN}.
type CustomFieldValue struct {
	CustomFieldId *int64 `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldId,omitempty" json:"customFieldId,omitempty" yaml:"customFieldId,omitempty"`
	Value         *Value `xml:"https://www.google.com/apis/ads/publisher/v202102 value,omitempty" json:"value,omitempty" yaml:"value,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CustomFieldValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CustomFieldValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Errors specific to editing custom field values
type CustomFieldValueError struct {
	FieldPath         *string                      `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement          `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                      `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                      `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *CustomFieldValueErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *CustomFieldValueError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:CustomFieldValueError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Represents a date.
type Date struct {
	Year  *int `xml:"https://www.google.com/apis/ads/publisher/v202102 year,omitempty" json:"year,omitempty" yaml:"year,omitempty"`
	Month *int `xml:"https://www.google.com/apis/ads/publisher/v202102 month,omitempty" json:"month,omitempty" yaml:"month,omitempty"`
	Day   *int `xml:"https://www.google.com/apis/ads/publisher/v202102 day,omitempty" json:"day,omitempty" yaml:"day,omitempty"`
}

// Represents a date combined with the time of day.
type DateTime struct {
	Date       *Date   `xml:"https://www.google.com/apis/ads/publisher/v202102 date,omitempty" json:"date,omitempty" yaml:"date,omitempty"`
	Hour       *int    `xml:"https://www.google.com/apis/ads/publisher/v202102 hour,omitempty" json:"hour,omitempty" yaml:"hour,omitempty"`
	Minute     *int    `xml:"https://www.google.com/apis/ads/publisher/v202102 minute,omitempty" json:"minute,omitempty" yaml:"minute,omitempty"`
	Second     *int    `xml:"https://www.google.com/apis/ads/publisher/v202102 second,omitempty" json:"second,omitempty" yaml:"second,omitempty"`
	TimeZoneId *string `xml:"https://www.google.com/apis/ads/publisher/v202102 timeZoneId,omitempty" json:"timeZoneId,omitempty" yaml:"timeZoneId,omitempty"`
}

// Contains a date-time value.
type DateTimeValue struct {
	Value         *DateTime `xml:"https://www.google.com/apis/ads/publisher/v202102 value,omitempty" json:"value,omitempty" yaml:"value,omitempty"`
	TypeAttrXSI   string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DateTimeValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DateTimeValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Contains a date value.
type DateValue struct {
	Value         *Date  `xml:"https://www.google.com/apis/ads/publisher/v202102 value,omitempty" json:"value,omitempty" yaml:"value,omitempty"`
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DateValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DateValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// The action used for deactivating {@link Creative} objects.
type DeactivateCreatives struct {
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DeactivateCreatives) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DeactivateCreatives"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@link CustomFieldValue} for a {@link CustomField} that has
// a {@link CustomField#dataType}             of {@link CustomFieldDataType#DROP_DOWN}
type DropDownCustomFieldValue struct {
	CustomFieldId       *int64 `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldId,omitempty" json:"customFieldId,omitempty" yaml:"customFieldId,omitempty"`
	CustomFieldOptionId *int64 `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldOptionId,omitempty" json:"customFieldOptionId,omitempty" yaml:"customFieldOptionId,omitempty"`
	TypeAttrXSI         string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DropDownCustomFieldValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DropDownCustomFieldValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// An error that occurs when creating an entity if the limit on
// the number of allowed entities for             a network has
// already been reached.
type EntityLimitReachedError struct {
	FieldPath         *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement            `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *EntityLimitReachedErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *EntityLimitReachedError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:EntityLimitReachedError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Errors related to feature management.  If you attempt using
// a feature that is not available to             the current network
// you'll receive a FeatureError with the missing feature as the
// trigger.
type FeatureError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *FeatureErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FeatureError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FeatureError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A segment of a field path. Each dot in a field path defines
// a new segment.
type FieldPathElement struct {
	Field *string `xml:"https://www.google.com/apis/ads/publisher/v202102 field,omitempty" json:"field,omitempty" yaml:"field,omitempty"`
	Index *int    `xml:"https://www.google.com/apis/ads/publisher/v202102 index,omitempty" json:"index,omitempty" yaml:"index,omitempty"`
}

// A list of all errors to be used for problems related to files.
type FileError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *FileErrorReason    `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *FileError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:FileError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that has a destination url
type HasDestinationUrlCreative struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *HasDestinationUrlCreative) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case AspectRatioImageCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case AudioCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case AudioRedirectCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case CustomCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ImageCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ImageOverlayCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ImageRedirectCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case ImageRedirectOverlayCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case SetTopBoxCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case VideoCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case VideoRedirectCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for HasDestinationUrlCreative.
func (t *HasDestinationUrlCreative) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for HasDestinationUrlCreative.
func (t *HasDestinationUrlCreative) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := HasDestinationUrlCreative{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "AspectRatioImageCreative":
				tt.Value = new(AspectRatioImageCreative)
			case "AudioCreative":
				tt.Value = new(AudioCreative)
			case "AudioRedirectCreative":
				tt.Value = new(AudioRedirectCreative)
			case "CustomCreative":
				tt.Value = new(CustomCreative)
			case "ImageCreative":
				tt.Value = new(ImageCreative)
			case "ImageOverlayCreative":
				tt.Value = new(ImageOverlayCreative)
			case "ImageRedirectCreative":
				tt.Value = new(ImageRedirectCreative)
			case "ImageRedirectOverlayCreative":
				tt.Value = new(ImageRedirectOverlayCreative)
			case "SetTopBoxCreative":
				tt.Value = new(SetTopBoxCreative)
			case "VideoCreative":
				tt.Value = new(VideoCreative)
			case "VideoRedirectCreative":
				tt.Value = new(VideoRedirectCreative)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// Dynamic allocation creative with a backfill code snippet.
type HasHtmlSnippetDynamicAllocationCreative struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *HasHtmlSnippetDynamicAllocationCreative) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case AdExchangeCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case AdSenseCreative:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for HasHtmlSnippetDynamicAllocationCreative.
func (t *HasHtmlSnippetDynamicAllocationCreative) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for HasHtmlSnippetDynamicAllocationCreative.
func (t *HasHtmlSnippetDynamicAllocationCreative) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := HasHtmlSnippetDynamicAllocationCreative{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "AdExchangeCreative":
				tt.Value = new(AdExchangeCreative)
			case "AdSenseCreative":
				tt.Value = new(AdSenseCreative)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// A {@code Creative} that contains a zipped HTML5 bundle asset,
// a list of third party impression             trackers, and a
// third party click tracker.
type Html5Creative struct {
	AdvertiserId                     *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                               *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                             *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                             *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                       *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels                     []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels                    []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime             *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues                []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration        *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	OverrideSize                     *bool                      `xml:"https://www.google.com/apis/ads/publisher/v202102 overrideSize,omitempty" json:"overrideSize,omitempty" yaml:"overrideSize,omitempty"`
	ThirdPartyImpressionTrackingUrls []*string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyImpressionTrackingUrls,omitempty" json:"thirdPartyImpressionTrackingUrls,omitempty" yaml:"thirdPartyImpressionTrackingUrls,omitempty"`
	ThirdPartyClickTrackingUrl       *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyClickTrackingUrl,omitempty" json:"thirdPartyClickTrackingUrl,omitempty" yaml:"thirdPartyClickTrackingUrl,omitempty"`
	LockedOrientation                *LockedOrientation         `xml:"https://www.google.com/apis/ads/publisher/v202102 lockedOrientation,omitempty" json:"lockedOrientation,omitempty" yaml:"lockedOrientation,omitempty"`
	SslScanResult                    *SslScanResult             `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride                *SslManualOverride         `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	IsSafeFrameCompatible            *bool                      `xml:"https://www.google.com/apis/ads/publisher/v202102 isSafeFrameCompatible,omitempty" json:"isSafeFrameCompatible,omitempty" yaml:"isSafeFrameCompatible,omitempty"`
	Html5Asset                       *CreativeAsset             `xml:"https://www.google.com/apis/ads/publisher/v202102 html5Asset,omitempty" json:"html5Asset,omitempty" yaml:"html5Asset,omitempty"`
	TypeAttrXSI                      string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                    string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *Html5Creative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:Html5Creative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Lists all errors associated with html5 file processing.
type HtmlBundleProcessorError struct {
	FieldPath         *string                         `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                         `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                         `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *HtmlBundleProcessorErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                          `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                          `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *HtmlBundleProcessorError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:HtmlBundleProcessorError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that displays an image.
type ImageCreative struct {
	AdvertiserId              *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	DestinationUrl            *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	DestinationUrlType        *DestinationUrlType        `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrlType,omitempty" json:"destinationUrlType,omitempty" yaml:"destinationUrlType,omitempty"`
	OverrideSize              *bool                      `xml:"https://www.google.com/apis/ads/publisher/v202102 overrideSize,omitempty" json:"overrideSize,omitempty" yaml:"overrideSize,omitempty"`
	PrimaryImageAsset         *CreativeAsset             `xml:"https://www.google.com/apis/ads/publisher/v202102 primaryImageAsset,omitempty" json:"primaryImageAsset,omitempty" yaml:"primaryImageAsset,omitempty"`
	AltText                   *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 altText,omitempty" json:"altText,omitempty" yaml:"altText,omitempty"`
	ThirdPartyImpressionUrl   *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyImpressionUrl,omitempty" json:"thirdPartyImpressionUrl,omitempty" yaml:"thirdPartyImpressionUrl,omitempty"`
	SecondaryImageAssets      []*CreativeAsset           `xml:"https://www.google.com/apis/ads/publisher/v202102 secondaryImageAssets,omitempty" json:"secondaryImageAssets,omitempty" yaml:"secondaryImageAssets,omitempty"`
	TypeAttrXSI               string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ImageCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ImageCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Lists all errors associated with images.
type ImageError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *ImageErrorReason   `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ImageError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ImageError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// An overlay {@code Creative} that displays an image and is served
// via VAST             2.0 XML. Overlays cover part of the video
// content they are displayed on             top of. This creative
// is read only prior to v201705.
type ImageOverlayCreative struct {
	AdvertiserId              *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation              `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel                         `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                               `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration              `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	DestinationUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	DestinationUrlType        *DestinationUrlType                     `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrlType,omitempty" json:"destinationUrlType,omitempty" yaml:"destinationUrlType,omitempty"`
	OverrideSize              *bool                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 overrideSize,omitempty" json:"overrideSize,omitempty" yaml:"overrideSize,omitempty"`
	PrimaryImageAsset         *CreativeAsset                          `xml:"https://www.google.com/apis/ads/publisher/v202102 primaryImageAsset,omitempty" json:"primaryImageAsset,omitempty" yaml:"primaryImageAsset,omitempty"`
	CompanionCreativeIds      []*int64                                `xml:"https://www.google.com/apis/ads/publisher/v202102 companionCreativeIds,omitempty" json:"companionCreativeIds,omitempty" yaml:"companionCreativeIds,omitempty"`
	TrackingUrls              []*ConversionEvent_TrackingUrlsMapEntry `xml:"https://www.google.com/apis/ads/publisher/v202102 trackingUrls,omitempty" json:"trackingUrls,omitempty" yaml:"trackingUrls,omitempty"`
	LockedOrientation         *LockedOrientation                      `xml:"https://www.google.com/apis/ads/publisher/v202102 lockedOrientation,omitempty" json:"lockedOrientation,omitempty" yaml:"lockedOrientation,omitempty"`
	CustomParameters          *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customParameters,omitempty" json:"customParameters,omitempty" yaml:"customParameters,omitempty"`
	Duration                  *int                                    `xml:"https://www.google.com/apis/ads/publisher/v202102 duration,omitempty" json:"duration,omitempty" yaml:"duration,omitempty"`
	VastPreviewUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 vastPreviewUrl,omitempty" json:"vastPreviewUrl,omitempty" yaml:"vastPreviewUrl,omitempty"`
	TypeAttrXSI               string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ImageOverlayCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ImageOverlayCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that loads an image asset from a specified
// URL.
type ImageRedirectCreative struct {
	AdvertiserId              *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	DestinationUrl            *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	DestinationUrlType        *DestinationUrlType        `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrlType,omitempty" json:"destinationUrlType,omitempty" yaml:"destinationUrlType,omitempty"`
	ImageUrl                  *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 imageUrl,omitempty" json:"imageUrl,omitempty" yaml:"imageUrl,omitempty"`
	AltText                   *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 altText,omitempty" json:"altText,omitempty" yaml:"altText,omitempty"`
	ThirdPartyImpressionUrl   *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyImpressionUrl,omitempty" json:"thirdPartyImpressionUrl,omitempty" yaml:"thirdPartyImpressionUrl,omitempty"`
	TypeAttrXSI               string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ImageRedirectCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ImageRedirectCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// An overlay {@code Creative} that loads an image asset from a
// specified URL             and is served via VAST XML. Overlays
// cover part of the video content             they are displayed
// on top of.  This creative is read only.
type ImageRedirectOverlayCreative struct {
	AdvertiserId              *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation              `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel                         `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                               `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration              `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	DestinationUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	DestinationUrlType        *DestinationUrlType                     `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrlType,omitempty" json:"destinationUrlType,omitempty" yaml:"destinationUrlType,omitempty"`
	ImageUrl                  *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 imageUrl,omitempty" json:"imageUrl,omitempty" yaml:"imageUrl,omitempty"`
	AssetSize                 *Size                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 assetSize,omitempty" json:"assetSize,omitempty" yaml:"assetSize,omitempty"`
	Duration                  *int                                    `xml:"https://www.google.com/apis/ads/publisher/v202102 duration,omitempty" json:"duration,omitempty" yaml:"duration,omitempty"`
	CompanionCreativeIds      []*int64                                `xml:"https://www.google.com/apis/ads/publisher/v202102 companionCreativeIds,omitempty" json:"companionCreativeIds,omitempty" yaml:"companionCreativeIds,omitempty"`
	TrackingUrls              []*ConversionEvent_TrackingUrlsMapEntry `xml:"https://www.google.com/apis/ads/publisher/v202102 trackingUrls,omitempty" json:"trackingUrls,omitempty" yaml:"trackingUrls,omitempty"`
	CustomParameters          *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customParameters,omitempty" json:"customParameters,omitempty" yaml:"customParameters,omitempty"`
	VastPreviewUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 vastPreviewUrl,omitempty" json:"vastPreviewUrl,omitempty" yaml:"vastPreviewUrl,omitempty"`
	TypeAttrXSI               string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ImageRedirectOverlayCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ImageRedirectOverlayCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Indicates that a server-side error has occured. {@code InternalApiError}s
//             are generally not the result of an invalid request
// or message sent by the             client.
type InternalApiError struct {
	FieldPath         *string                 `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement     `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                 `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                 `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *InternalApiErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *InternalApiError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:InternalApiError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} hosted by Campaign Manager 360.
//                 <p>Similar to third-party creatives, a Campaign
// Manager 360 tag is used to retrieve a creative             asset.
// However, Campaign Manager 360 tags are not sent to the user's
// browser. Instead, they are             processed internally
// within the Google Marketing Platform system..
type InternalRedirectCreative struct {
	AdvertiserId                     *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                               *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                             *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                             *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                       *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels                     []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels                    []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime             *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues                []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration        *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	LockedOrientation                *LockedOrientation         `xml:"https://www.google.com/apis/ads/publisher/v202102 lockedOrientation,omitempty" json:"lockedOrientation,omitempty" yaml:"lockedOrientation,omitempty"`
	AssetSize                        *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 assetSize,omitempty" json:"assetSize,omitempty" yaml:"assetSize,omitempty"`
	InternalRedirectUrl              *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 internalRedirectUrl,omitempty" json:"internalRedirectUrl,omitempty" yaml:"internalRedirectUrl,omitempty"`
	OverrideSize                     *bool                      `xml:"https://www.google.com/apis/ads/publisher/v202102 overrideSize,omitempty" json:"overrideSize,omitempty" yaml:"overrideSize,omitempty"`
	IsInterstitial                   *bool                      `xml:"https://www.google.com/apis/ads/publisher/v202102 isInterstitial,omitempty" json:"isInterstitial,omitempty" yaml:"isInterstitial,omitempty"`
	SslScanResult                    *SslScanResult             `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride                *SslManualOverride         `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	ThirdPartyImpressionTrackingUrls []*string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyImpressionTrackingUrls,omitempty" json:"thirdPartyImpressionTrackingUrls,omitempty" yaml:"thirdPartyImpressionTrackingUrls,omitempty"`
	TypeAttrXSI                      string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                    string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *InternalRedirectCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:InternalRedirectCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Lists all errors associated with phone numbers.
type InvalidPhoneNumberError struct {
	FieldPath         *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement            `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *InvalidPhoneNumberErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *InvalidPhoneNumberError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:InvalidPhoneNumberError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Lists all errors associated with URLs.
type InvalidUrlError struct {
	FieldPath         *string                `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement    `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *InvalidUrlErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *InvalidUrlError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:InvalidUrlError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Errors specific to creating label entity associations.
type LabelEntityAssociationError struct {
	FieldPath         *string                            `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement                `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                            `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                            `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *LabelEntityAssociationErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *LabelEntityAssociationError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:LabelEntityAssociationError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that isn't supported by Google DFP, but was
// migrated             from DART. Creatives of this type cannot
// be created or modified.
type LegacyDfpCreative struct {
	AdvertiserId              *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	TypeAttrXSI               string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *LegacyDfpCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:LegacyDfpCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Lists all errors associated with line item-to-creative association
// dates.
type LineItemCreativeAssociationError struct {
	FieldPath         *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement                     `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *LineItemCreativeAssociationErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *LineItemCreativeAssociationError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:LineItemCreativeAssociationError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Stores values of {@link CreativeTemplateVariable} of {@link
// VariableType#LONG}.
type LongCreativeTemplateVariableValue struct {
	UniqueName    *string `xml:"https://www.google.com/apis/ads/publisher/v202102 uniqueName,omitempty" json:"uniqueName,omitempty" yaml:"uniqueName,omitempty"`
	Value         *int64  `xml:"https://www.google.com/apis/ads/publisher/v202102 value,omitempty" json:"value,omitempty" yaml:"value,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *LongCreativeTemplateVariableValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:LongCreativeTemplateVariableValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Caused by supplying a null value for an attribute that cannot
// be null.
type NotNullError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *NotNullErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *NotNullError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:NotNullError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Errors associated with violation of a NOT NULL check.
type NullError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *NullErrorReason    `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *NullError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:NullError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Contains a numeric value.
type NumberValue struct {
	Value         *string `xml:"https://www.google.com/apis/ads/publisher/v202102 value,omitempty" json:"value,omitempty" yaml:"value,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *NumberValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:NumberValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Contains an object value.             <p>             <b>This
// object is experimental!             <code>ObjectValue</code>
// is an experimental, innovative, and rapidly             changing
// new feature for Ad Manager. Unfortunately, being on the bleeding
// edge means that             we may make backwards-incompatible
// changes to             <code>ObjectValue</code>. We will inform
// the community when this feature             is no longer experimental.</b>
type ObjectValue struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *ObjectValue) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()

	}
}

// MarshalXML for ObjectValue.
func (t *ObjectValue) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for ObjectValue.
func (t *ObjectValue) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := ObjectValue{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// Lists errors related to parsing.
type ParseError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *ParseErrorReason   `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ParseError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ParseError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Errors related to incorrect permission.
type PermissionError struct {
	FieldPath         *string                `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement    `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *PermissionErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PermissionError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PermissionError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} used for programmatic trafficking. This creative
// will be auto-created with the             right approval from
// the buyer. This creative cannot be created through the API.
// This creative can             be updated.
type ProgrammaticCreative struct {
	AdvertiserId              *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	TypeAttrXSI               string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ProgrammaticCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ProgrammaticCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// An error that occurs while executing a PQL query contained in
//             a {@link Statement} object.
type PublisherQueryLanguageContextError struct {
	FieldPath         *string                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement                       `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *PublisherQueryLanguageContextErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                                    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                                    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PublisherQueryLanguageContextError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PublisherQueryLanguageContextError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// An error that occurs while parsing a PQL query contained in
// a             {@link Statement} object.
type PublisherQueryLanguageSyntaxError struct {
	FieldPath         *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement                      `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *PublisherQueryLanguageSyntaxErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *PublisherQueryLanguageSyntaxError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:PublisherQueryLanguageSyntaxError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Describes a client-side error on which a user is attempting
//             to perform an action to which they have no quota
// remaining.
type QuotaError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *QuotaErrorReason   `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *QuotaError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:QuotaError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A list of all errors associated with the Range constraint.
type RangeError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *RangeErrorReason   `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RangeError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RangeError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// An externally hosted asset.
type RedirectAsset struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *RedirectAsset) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case VideoRedirectAsset:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for RedirectAsset.
func (t *RedirectAsset) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for RedirectAsset.
func (t *RedirectAsset) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := RedirectAsset{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "VideoRedirectAsset":
				tt.Value = new(VideoRedirectAsset)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// A list of all errors to be used for validating sizes of collections.
type RequiredCollectionError struct {
	FieldPath         *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement            `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                        `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *RequiredCollectionErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RequiredCollectionError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RequiredCollectionError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Errors due to missing required field.
type RequiredError struct {
	FieldPath         *string              `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement  `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string              `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string              `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *RequiredErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RequiredError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RequiredError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A list of all errors to be used in conjunction with required
// number             validators.
type RequiredNumberError struct {
	FieldPath         *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement        `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *RequiredNumberErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RequiredNumberError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RequiredNumberError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A list of all errors to be used for validating {@link Size}.
type RequiredSizeError struct {
	FieldPath         *string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement      `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *RequiredSizeErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RequiredSizeError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RequiredSizeError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Represents a child asset in {@code RichMediaStudioCreative}.
type RichMediaStudioChildAssetProperty struct {
	Name          *string                                `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Type          *RichMediaStudioChildAssetPropertyType `xml:"https://www.google.com/apis/ads/publisher/v202102 type,omitempty" json:"type,omitempty" yaml:"type,omitempty"`
	TotalFileSize *int64                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 totalFileSize,omitempty" json:"totalFileSize,omitempty" yaml:"totalFileSize,omitempty"`
	Width         *int                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 width,omitempty" json:"width,omitempty" yaml:"width,omitempty"`
	Height        *int                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 height,omitempty" json:"height,omitempty" yaml:"height,omitempty"`
	Url           *string                                `xml:"https://www.google.com/apis/ads/publisher/v202102 url,omitempty" json:"url,omitempty" yaml:"url,omitempty"`
}

// A {@code Creative} that is created by a Rich Media Studio. You
// cannot create this creative,             but you can update
// some fields of this creative.
type RichMediaStudioCreative struct {
	AdvertiserId                        *int64                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                                  *int64                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                                *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                                *Size                                    `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                          *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels                        []*CreativePolicyViolation               `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels                       []*AppliedLabel                          `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime                *DateTime                                `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues                   []*BaseCustomFieldValue                  `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration           *ThirdPartyDataDeclaration               `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	StudioCreativeId                    *int64                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 studioCreativeId,omitempty" json:"studioCreativeId,omitempty" yaml:"studioCreativeId,omitempty"`
	CreativeFormat                      *RichMediaStudioCreativeFormat           `xml:"https://www.google.com/apis/ads/publisher/v202102 creativeFormat,omitempty" json:"creativeFormat,omitempty" yaml:"creativeFormat,omitempty"`
	ArtworkType                         *RichMediaStudioCreativeArtworkType      `xml:"https://www.google.com/apis/ads/publisher/v202102 artworkType,omitempty" json:"artworkType,omitempty" yaml:"artworkType,omitempty"`
	TotalFileSize                       *int64                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 totalFileSize,omitempty" json:"totalFileSize,omitempty" yaml:"totalFileSize,omitempty"`
	AdTagKeys                           []*string                                `xml:"https://www.google.com/apis/ads/publisher/v202102 adTagKeys,omitempty" json:"adTagKeys,omitempty" yaml:"adTagKeys,omitempty"`
	CustomKeyValues                     []*string                                `xml:"https://www.google.com/apis/ads/publisher/v202102 customKeyValues,omitempty" json:"customKeyValues,omitempty" yaml:"customKeyValues,omitempty"`
	SurveyUrl                           *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 surveyUrl,omitempty" json:"surveyUrl,omitempty" yaml:"surveyUrl,omitempty"`
	AllImpressionsUrl                   *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 allImpressionsUrl,omitempty" json:"allImpressionsUrl,omitempty" yaml:"allImpressionsUrl,omitempty"`
	RichMediaImpressionsUrl             *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 richMediaImpressionsUrl,omitempty" json:"richMediaImpressionsUrl,omitempty" yaml:"richMediaImpressionsUrl,omitempty"`
	BackupImageImpressionsUrl           *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 backupImageImpressionsUrl,omitempty" json:"backupImageImpressionsUrl,omitempty" yaml:"backupImageImpressionsUrl,omitempty"`
	OverrideCss                         *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 overrideCss,omitempty" json:"overrideCss,omitempty" yaml:"overrideCss,omitempty"`
	RequiredFlashPluginVersion          *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 requiredFlashPluginVersion,omitempty" json:"requiredFlashPluginVersion,omitempty" yaml:"requiredFlashPluginVersion,omitempty"`
	Duration                            *int                                     `xml:"https://www.google.com/apis/ads/publisher/v202102 duration,omitempty" json:"duration,omitempty" yaml:"duration,omitempty"`
	BillingAttribute                    *RichMediaStudioCreativeBillingAttribute `xml:"https://www.google.com/apis/ads/publisher/v202102 billingAttribute,omitempty" json:"billingAttribute,omitempty" yaml:"billingAttribute,omitempty"`
	RichMediaStudioChildAssetProperties []*RichMediaStudioChildAssetProperty     `xml:"https://www.google.com/apis/ads/publisher/v202102 richMediaStudioChildAssetProperties,omitempty" json:"richMediaStudioChildAssetProperties,omitempty" yaml:"richMediaStudioChildAssetProperties,omitempty"`
	SslScanResult                       *SslScanResult                           `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride                   *SslManualOverride                       `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	LockedOrientation                   *LockedOrientation                       `xml:"https://www.google.com/apis/ads/publisher/v202102 lockedOrientation,omitempty" json:"lockedOrientation,omitempty" yaml:"lockedOrientation,omitempty"`
	IsInterstitial                      *bool                                    `xml:"https://www.google.com/apis/ads/publisher/v202102 isInterstitial,omitempty" json:"isInterstitial,omitempty" yaml:"isInterstitial,omitempty"`
	TypeAttrXSI                         string                                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                       string                                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RichMediaStudioCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RichMediaStudioCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Lists all errors associated with Studio creatives.
type RichMediaStudioCreativeError struct {
	FieldPath         *string                             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement                 `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *RichMediaStudioCreativeErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RichMediaStudioCreativeError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RichMediaStudioCreativeError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Errors related to the server.
type ServerError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *ServerErrorReason  `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ServerError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ServerError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that will be served into cable set-top boxes.
// There are no assets for this             creative type, as they
// are hosted by external cable systems.
type SetTopBoxCreative struct {
	AdvertiserId               *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                         *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                       *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                       *Size                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                 *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels               []*CreativePolicyViolation              `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels              []*AppliedLabel                         `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime       *DateTime                               `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues          []*BaseCustomFieldValue                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration  *ThirdPartyDataDeclaration              `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	DestinationUrl             *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	DestinationUrlType         *DestinationUrlType                     `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrlType,omitempty" json:"destinationUrlType,omitempty" yaml:"destinationUrlType,omitempty"`
	Duration                   *int                                    `xml:"https://www.google.com/apis/ads/publisher/v202102 duration,omitempty" json:"duration,omitempty" yaml:"duration,omitempty"`
	AllowDurationOverride      *bool                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 allowDurationOverride,omitempty" json:"allowDurationOverride,omitempty" yaml:"allowDurationOverride,omitempty"`
	TrackingUrls               []*ConversionEvent_TrackingUrlsMapEntry `xml:"https://www.google.com/apis/ads/publisher/v202102 trackingUrls,omitempty" json:"trackingUrls,omitempty" yaml:"trackingUrls,omitempty"`
	CompanionCreativeIds       []*int64                                `xml:"https://www.google.com/apis/ads/publisher/v202102 companionCreativeIds,omitempty" json:"companionCreativeIds,omitempty" yaml:"companionCreativeIds,omitempty"`
	CustomParameters           *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customParameters,omitempty" json:"customParameters,omitempty" yaml:"customParameters,omitempty"`
	AdId                       *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 adId,omitempty" json:"adId,omitempty" yaml:"adId,omitempty"`
	AdIdType                   *AdIdType                               `xml:"https://www.google.com/apis/ads/publisher/v202102 adIdType,omitempty" json:"adIdType,omitempty" yaml:"adIdType,omitempty"`
	SkippableAdType            *SkippableAdType                        `xml:"https://www.google.com/apis/ads/publisher/v202102 skippableAdType,omitempty" json:"skippableAdType,omitempty" yaml:"skippableAdType,omitempty"`
	VastPreviewUrl             *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 vastPreviewUrl,omitempty" json:"vastPreviewUrl,omitempty" yaml:"vastPreviewUrl,omitempty"`
	SslScanResult              *SslScanResult                          `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride          *SslManualOverride                      `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	ExternalAssetId            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 externalAssetId,omitempty" json:"externalAssetId,omitempty" yaml:"externalAssetId,omitempty"`
	ProviderId                 *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 providerId,omitempty" json:"providerId,omitempty" yaml:"providerId,omitempty"`
	AvailabilityRegionIds      []*string                               `xml:"https://www.google.com/apis/ads/publisher/v202102 availabilityRegionIds,omitempty" json:"availabilityRegionIds,omitempty" yaml:"availabilityRegionIds,omitempty"`
	LicenseWindowStartDateTime *DateTime                               `xml:"https://www.google.com/apis/ads/publisher/v202102 licenseWindowStartDateTime,omitempty" json:"licenseWindowStartDateTime,omitempty" yaml:"licenseWindowStartDateTime,omitempty"`
	LicenseWindowEndDateTime   *DateTime                               `xml:"https://www.google.com/apis/ads/publisher/v202102 licenseWindowEndDateTime,omitempty" json:"licenseWindowEndDateTime,omitempty" yaml:"licenseWindowEndDateTime,omitempty"`
	TypeAttrXSI                string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace              string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetTopBoxCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetTopBoxCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Errors associated with {@link SetTopBoxCreative set-top box
// creatives}.
type SetTopBoxCreativeError struct {
	FieldPath         *string                       `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement           `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                       `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                       `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *SetTopBoxCreativeErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetTopBoxCreativeError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetTopBoxCreativeError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Contains a set of {@link Value Values}. May not contain duplicates.
type SetValue struct {
	Values        []*Value `xml:"https://www.google.com/apis/ads/publisher/v202102 values,omitempty" json:"values,omitempty" yaml:"values,omitempty"`
	TypeAttrXSI   string   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SetValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SetValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Represents the dimensions of an {@link AdUnit}, {@link LineItem}
// or {@link Creative}.                          <p>For interstitial
// size (out-of-page), native, ignored and fluid size, {@link Size}
// must be 1x1.
type Size struct {
	Width         *int  `xml:"https://www.google.com/apis/ads/publisher/v202102 width,omitempty" json:"width,omitempty" yaml:"width,omitempty"`
	Height        *int  `xml:"https://www.google.com/apis/ads/publisher/v202102 height,omitempty" json:"height,omitempty" yaml:"height,omitempty"`
	IsAspectRatio *bool `xml:"https://www.google.com/apis/ads/publisher/v202102 isAspectRatio,omitempty" json:"isAspectRatio,omitempty" yaml:"isAspectRatio,omitempty"`
}

// Represents the SOAP request header used by API requests.
type SoapRequestHeader struct {
	NetworkCode     *string `xml:"https://www.google.com/apis/ads/publisher/v202102 networkCode,omitempty" json:"networkCode,omitempty" yaml:"networkCode,omitempty"`
	ApplicationName *string `xml:"https://www.google.com/apis/ads/publisher/v202102 applicationName,omitempty" json:"applicationName,omitempty" yaml:"applicationName,omitempty"`
}

// Represents the SOAP request header used by API responses.
type SoapResponseHeader struct {
	RequestId    *string `xml:"https://www.google.com/apis/ads/publisher/v202102 requestId,omitempty" json:"requestId,omitempty" yaml:"requestId,omitempty"`
	ResponseTime *int64  `xml:"https://www.google.com/apis/ads/publisher/v202102 responseTime,omitempty" json:"responseTime,omitempty" yaml:"responseTime,omitempty"`
}

// Captures the {@code WHERE}, {@code ORDER BY} and {@code LIMIT}
// clauses of a             PQL query. Statements are typically
// used to retrieve objects of a predefined             domain
// type, which makes SELECT clause unnecessary.             <p>
//             An example query text might be {@code "WHERE status
// = 'ACTIVE' ORDER BY id             LIMIT 30"}.             </p>
//             <p>             Statements support bind variables.
// These are substitutes for literals             and can be thought
// of as input parameters to a PQL query.             </p>
//         <p>             An example of such a query might be
// {@code "WHERE id = :idValue"}.             </p>
// <p>             Statements also support use of the LIKE keyword.
// This provides wildcard string matching.             </p>
//          <p>             An example of such a query might be
// {@code "WHERE name LIKE '%searchString%'"}.             </p>
//             The value for the variable idValue must then be
// set with an object of type             {@link Value}, e.g.,
// {@link NumberValue}, {@link TextValue} or             {@link
// BooleanValue}.
type Statement struct {
	Query  *string                 `xml:"https://www.google.com/apis/ads/publisher/v202102 query,omitempty" json:"query,omitempty" yaml:"query,omitempty"`
	Values []*String_ValueMapEntry `xml:"https://www.google.com/apis/ads/publisher/v202102 values,omitempty" json:"values,omitempty" yaml:"values,omitempty"`
}

// An error that occurs while parsing {@link Statement} objects.
type StatementError struct {
	FieldPath         *string               `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement   `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string               `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string               `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *StatementErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *StatementError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:StatementError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Stores values of {@link CreativeTemplateVariable} of
//      {@link VariableType#STRING} and {@link VariableType#LIST}.
type StringCreativeTemplateVariableValue struct {
	UniqueName    *string `xml:"https://www.google.com/apis/ads/publisher/v202102 uniqueName,omitempty" json:"uniqueName,omitempty" yaml:"uniqueName,omitempty"`
	Value         *string `xml:"https://www.google.com/apis/ads/publisher/v202102 value,omitempty" json:"value,omitempty" yaml:"value,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *StringCreativeTemplateVariableValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:StringCreativeTemplateVariableValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A list of error code for reporting invalid content of input
// strings.
type StringFormatError struct {
	FieldPath         *string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement      `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *StringFormatErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *StringFormatError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:StringFormatError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Errors for Strings which do not meet given length constraints.
type StringLengthError struct {
	FieldPath         *string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement      `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *StringLengthErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *StringLengthError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:StringLengthError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// This represents an entry in a map with a key of type String
//             and value of type Value.
type String_ValueMapEntry struct {
	Key   *string `xml:"https://www.google.com/apis/ads/publisher/v202102 key,omitempty" json:"key,omitempty" yaml:"key,omitempty"`
	Value *Value  `xml:"https://www.google.com/apis/ads/publisher/v202102 value,omitempty" json:"value,omitempty" yaml:"value,omitempty"`
}

// Error for converting flash to swiffy asset.
type SwiffyConversionError struct {
	FieldPath         *string                      `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement          `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                      `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                      `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *SwiffyConversionErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SwiffyConversionError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SwiffyConversionError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that is created by the specified creative
// template.
type TemplateCreative struct {
	AdvertiserId                   *int64                               `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                             *int64                               `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                           *string                              `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                           *Size                                `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                     *string                              `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels                   []*CreativePolicyViolation           `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels                  []*AppliedLabel                      `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime           *DateTime                            `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues              []*BaseCustomFieldValue              `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration      *ThirdPartyDataDeclaration           `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	CreativeTemplateId             *int64                               `xml:"https://www.google.com/apis/ads/publisher/v202102 creativeTemplateId,omitempty" json:"creativeTemplateId,omitempty" yaml:"creativeTemplateId,omitempty"`
	IsInterstitial                 *bool                                `xml:"https://www.google.com/apis/ads/publisher/v202102 isInterstitial,omitempty" json:"isInterstitial,omitempty" yaml:"isInterstitial,omitempty"`
	IsNativeEligible               *bool                                `xml:"https://www.google.com/apis/ads/publisher/v202102 isNativeEligible,omitempty" json:"isNativeEligible,omitempty" yaml:"isNativeEligible,omitempty"`
	IsSafeFrameCompatible          *bool                                `xml:"https://www.google.com/apis/ads/publisher/v202102 isSafeFrameCompatible,omitempty" json:"isSafeFrameCompatible,omitempty" yaml:"isSafeFrameCompatible,omitempty"`
	DestinationUrl                 *string                              `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	CreativeTemplateVariableValues []*BaseCreativeTemplateVariableValue `xml:"https://www.google.com/apis/ads/publisher/v202102 creativeTemplateVariableValues,omitempty" json:"creativeTemplateVariableValues,omitempty" yaml:"creativeTemplateVariableValues,omitempty"`
	SslScanResult                  *SslScanResult                       `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride              *SslManualOverride                   `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	LockedOrientation              *LockedOrientation                   `xml:"https://www.google.com/apis/ads/publisher/v202102 lockedOrientation,omitempty" json:"lockedOrientation,omitempty" yaml:"lockedOrientation,omitempty"`
	TypeAttrXSI                    string                               `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                  string                               `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *TemplateCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:TemplateCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Lists all errors associated with template instantiated creatives.
type TemplateInstantiatedCreativeError struct {
	FieldPath         *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement                      `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	Reason            *TemplateInstantiatedCreativeErrorReason `xml:"https://www.google.com/apis/ads/publisher/v202102 reason,omitempty" json:"reason,omitempty" yaml:"reason,omitempty"`
	TypeAttrXSI       string                                   `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                                   `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *TemplateInstantiatedCreativeError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:TemplateInstantiatedCreativeError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Contains a string value.
type TextValue struct {
	Value         *string `xml:"https://www.google.com/apis/ads/publisher/v202102 value,omitempty" json:"value,omitempty" yaml:"value,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *TextValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:TextValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that is served by a 3rd-party vendor.
type ThirdPartyCreative struct {
	AdvertiserId                     *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                               *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                             *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                             *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                       *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels                     []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels                    []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime             *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues                []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration        *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	Snippet                          *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 snippet,omitempty" json:"snippet,omitempty" yaml:"snippet,omitempty"`
	ExpandedSnippet                  *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 expandedSnippet,omitempty" json:"expandedSnippet,omitempty" yaml:"expandedSnippet,omitempty"`
	SslScanResult                    *SslScanResult             `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride                *SslManualOverride         `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	LockedOrientation                *LockedOrientation         `xml:"https://www.google.com/apis/ads/publisher/v202102 lockedOrientation,omitempty" json:"lockedOrientation,omitempty" yaml:"lockedOrientation,omitempty"`
	IsSafeFrameCompatible            *bool                      `xml:"https://www.google.com/apis/ads/publisher/v202102 isSafeFrameCompatible,omitempty" json:"isSafeFrameCompatible,omitempty" yaml:"isSafeFrameCompatible,omitempty"`
	ThirdPartyImpressionTrackingUrls []*string                  `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyImpressionTrackingUrls,omitempty" json:"thirdPartyImpressionTrackingUrls,omitempty" yaml:"thirdPartyImpressionTrackingUrls,omitempty"`
	TypeAttrXSI                      string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                    string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *ThirdPartyCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:ThirdPartyCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Represents a set of declarations about what (if any) third party
// companies are             associated with a given creative.
//                          <p>This can be set at the network level,
// as a default for all creatives, or overridden for a
//     particular creative.
type ThirdPartyDataDeclaration struct {
	DeclarationType      *DeclarationType `xml:"https://www.google.com/apis/ads/publisher/v202102 declarationType,omitempty" json:"declarationType,omitempty" yaml:"declarationType,omitempty"`
	ThirdPartyCompanyIds []*int64         `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyCompanyIds,omitempty" json:"thirdPartyCompanyIds,omitempty" yaml:"thirdPartyCompanyIds,omitempty"`
}

// A list of URLs that should be pinged for a conversion event.
type TrackingUrls struct {
	Urls []*string `xml:"https://www.google.com/apis/ads/publisher/v202102 urls,omitempty" json:"urls,omitempty" yaml:"urls,omitempty"`
}

// An error for a field which is an invalid type.
type TypeError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *TypeError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:TypeError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// An error for a field which must satisfy a uniqueness constraint
type UniqueError struct {
	FieldPath         *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPath,omitempty" json:"fieldPath,omitempty" yaml:"fieldPath,omitempty"`
	FieldPathElements []*FieldPathElement `xml:"https://www.google.com/apis/ads/publisher/v202102 fieldPathElements,omitempty" json:"fieldPathElements,omitempty" yaml:"fieldPathElements,omitempty"`
	Trigger           *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 trigger,omitempty" json:"trigger,omitempty" yaml:"trigger,omitempty"`
	ErrorString       *string             `xml:"https://www.google.com/apis/ads/publisher/v202102 errorString,omitempty" json:"errorString,omitempty" yaml:"errorString,omitempty"`
	TypeAttrXSI       string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UniqueError) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UniqueError"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that isn't supported by this version of the
// API.             This object is readonly and when encountered
// should be reported             on the Ad Manager API forum.
type UnsupportedCreative struct {
	AdvertiserId              *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                     `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                      `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel            `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                  `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue    `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	UnsupportedCreativeType   *string                    `xml:"https://www.google.com/apis/ads/publisher/v202102 unsupportedCreativeType,omitempty" json:"unsupportedCreativeType,omitempty" yaml:"unsupportedCreativeType,omitempty"`
	TypeAttrXSI               string                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UnsupportedCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UnsupportedCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Represents the result of performing an action on objects.
type UpdateResult struct {
	NumChanges *int `xml:"https://www.google.com/apis/ads/publisher/v202102 numChanges,omitempty" json:"numChanges,omitempty" yaml:"numChanges,omitempty"`
}

// Stores values of {@link CreativeTemplateVariable} of {@link
// VariableType#URL}.
type UrlCreativeTemplateVariableValue struct {
	UniqueName    *string `xml:"https://www.google.com/apis/ads/publisher/v202102 uniqueName,omitempty" json:"uniqueName,omitempty" yaml:"uniqueName,omitempty"`
	Value         *string `xml:"https://www.google.com/apis/ads/publisher/v202102 value,omitempty" json:"value,omitempty" yaml:"value,omitempty"`
	TypeAttrXSI   string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *UrlCreativeTemplateVariableValue) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:UrlCreativeTemplateVariableValue"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// {@code Value} represents a value.
type Value struct {
	Value         interface{}
	TypeAttrXSI   string `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string `xml:"xmlns:objtype,attr,omitempty"`
}

// SetXMLType copy TypeAttr and TypeNamespace from its Value field
func (t *Value) SetXMLType() {
	xmlTyper, ok := t.Value.(soap.XMLTyper)
	if ok {
		xmlTyper.SetXMLType()
		switch v := t.Value.(type) {
		case BooleanValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case DateTimeValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case DateValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case NumberValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case SetValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		case TextValue:
			t.TypeAttrXSI = v.TypeAttrXSI
			t.TypeNamespace = v.TypeNamespace
		}
	}
}

// MarshalXML for Value.
func (t *Value) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	return e.EncodeElement(t.Value, start)
}

// UnmarshalXML for Value.
func (t *Value) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	tt := Value{}
	for _, attr := range start.Attr {
		if attr.Name.Local == "type" {
			switch attr.Value {
			case "BooleanValue":
				tt.Value = new(BooleanValue)
			case "DateTimeValue":
				tt.Value = new(DateTimeValue)
			case "DateValue":
				tt.Value = new(DateValue)
			case "NumberValue":
				tt.Value = new(NumberValue)
			case "SetValue":
				tt.Value = new(SetValue)
			case "TextValue":
				tt.Value = new(TextValue)
			}
			d.DecodeElement(tt.Value, &start)
		}
	}
	*t = tt
	return nil
}

// A {@code Creative} that points to an externally hosted VAST
// ad and is             served via VAST XML as a VAST Wrapper.
type VastRedirectCreative struct {
	AdvertiserId              *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation              `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel                         `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                               `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration              `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	VastXmlUrl                *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 vastXmlUrl,omitempty" json:"vastXmlUrl,omitempty" yaml:"vastXmlUrl,omitempty"`
	VastRedirectType          *VastRedirectType                       `xml:"https://www.google.com/apis/ads/publisher/v202102 vastRedirectType,omitempty" json:"vastRedirectType,omitempty" yaml:"vastRedirectType,omitempty"`
	Duration                  *int                                    `xml:"https://www.google.com/apis/ads/publisher/v202102 duration,omitempty" json:"duration,omitempty" yaml:"duration,omitempty"`
	CompanionCreativeIds      []*int64                                `xml:"https://www.google.com/apis/ads/publisher/v202102 companionCreativeIds,omitempty" json:"companionCreativeIds,omitempty" yaml:"companionCreativeIds,omitempty"`
	TrackingUrls              []*ConversionEvent_TrackingUrlsMapEntry `xml:"https://www.google.com/apis/ads/publisher/v202102 trackingUrls,omitempty" json:"trackingUrls,omitempty" yaml:"trackingUrls,omitempty"`
	VastPreviewUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 vastPreviewUrl,omitempty" json:"vastPreviewUrl,omitempty" yaml:"vastPreviewUrl,omitempty"`
	SslScanResult             *SslScanResult                          `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride         *SslManualOverride                      `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	IsAudio                   *bool                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 isAudio,omitempty" json:"isAudio,omitempty" yaml:"isAudio,omitempty"`
	TypeAttrXSI               string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *VastRedirectCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:VastRedirectCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that contains Ad Manager hosted video ads
// and is served             via VAST XML.  This creative is read-only.
type VideoCreative struct {
	AdvertiserId              *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation              `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel                         `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                               `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration              `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	DestinationUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	DestinationUrlType        *DestinationUrlType                     `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrlType,omitempty" json:"destinationUrlType,omitempty" yaml:"destinationUrlType,omitempty"`
	Duration                  *int                                    `xml:"https://www.google.com/apis/ads/publisher/v202102 duration,omitempty" json:"duration,omitempty" yaml:"duration,omitempty"`
	AllowDurationOverride     *bool                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 allowDurationOverride,omitempty" json:"allowDurationOverride,omitempty" yaml:"allowDurationOverride,omitempty"`
	TrackingUrls              []*ConversionEvent_TrackingUrlsMapEntry `xml:"https://www.google.com/apis/ads/publisher/v202102 trackingUrls,omitempty" json:"trackingUrls,omitempty" yaml:"trackingUrls,omitempty"`
	CompanionCreativeIds      []*int64                                `xml:"https://www.google.com/apis/ads/publisher/v202102 companionCreativeIds,omitempty" json:"companionCreativeIds,omitempty" yaml:"companionCreativeIds,omitempty"`
	CustomParameters          *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customParameters,omitempty" json:"customParameters,omitempty" yaml:"customParameters,omitempty"`
	AdId                      *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 adId,omitempty" json:"adId,omitempty" yaml:"adId,omitempty"`
	AdIdType                  *AdIdType                               `xml:"https://www.google.com/apis/ads/publisher/v202102 adIdType,omitempty" json:"adIdType,omitempty" yaml:"adIdType,omitempty"`
	SkippableAdType           *SkippableAdType                        `xml:"https://www.google.com/apis/ads/publisher/v202102 skippableAdType,omitempty" json:"skippableAdType,omitempty" yaml:"skippableAdType,omitempty"`
	VastPreviewUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 vastPreviewUrl,omitempty" json:"vastPreviewUrl,omitempty" yaml:"vastPreviewUrl,omitempty"`
	SslScanResult             *SslScanResult                          `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride         *SslManualOverride                      `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	TypeAttrXSI               string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *VideoCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:VideoCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// Metadata for a video asset.
type VideoMetadata struct {
	ScalableType   *ScalableType      `xml:"https://www.google.com/apis/ads/publisher/v202102 scalableType,omitempty" json:"scalableType,omitempty" yaml:"scalableType,omitempty"`
	Duration       *int               `xml:"https://www.google.com/apis/ads/publisher/v202102 duration,omitempty" json:"duration,omitempty" yaml:"duration,omitempty"`
	BitRate        *int               `xml:"https://www.google.com/apis/ads/publisher/v202102 bitRate,omitempty" json:"bitRate,omitempty" yaml:"bitRate,omitempty"`
	MinimumBitRate *int               `xml:"https://www.google.com/apis/ads/publisher/v202102 minimumBitRate,omitempty" json:"minimumBitRate,omitempty" yaml:"minimumBitRate,omitempty"`
	MaximumBitRate *int               `xml:"https://www.google.com/apis/ads/publisher/v202102 maximumBitRate,omitempty" json:"maximumBitRate,omitempty" yaml:"maximumBitRate,omitempty"`
	Size           *Size              `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	MimeType       *MimeType          `xml:"https://www.google.com/apis/ads/publisher/v202102 mimeType,omitempty" json:"mimeType,omitempty" yaml:"mimeType,omitempty"`
	DeliveryType   *VideoDeliveryType `xml:"https://www.google.com/apis/ads/publisher/v202102 deliveryType,omitempty" json:"deliveryType,omitempty" yaml:"deliveryType,omitempty"`
	Codecs         []*string          `xml:"https://www.google.com/apis/ads/publisher/v202102 codecs,omitempty" json:"codecs,omitempty" yaml:"codecs,omitempty"`
}

// An externally-hosted video asset.
type VideoRedirectAsset struct {
	RedirectUrl   *string        `xml:"https://www.google.com/apis/ads/publisher/v202102 redirectUrl,omitempty" json:"redirectUrl,omitempty" yaml:"redirectUrl,omitempty"`
	Metadata      *VideoMetadata `xml:"https://www.google.com/apis/ads/publisher/v202102 metadata,omitempty" json:"metadata,omitempty" yaml:"metadata,omitempty"`
	TypeAttrXSI   string         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *VideoRedirectAsset) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:VideoRedirectAsset"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// A {@code Creative} that contains externally hosted video ads
// and             is served via VAST XML.
type VideoRedirectCreative struct {
	AdvertiserId              *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 advertiserId,omitempty" json:"advertiserId,omitempty" yaml:"advertiserId,omitempty"`
	Id                        *int64                                  `xml:"https://www.google.com/apis/ads/publisher/v202102 id,omitempty" json:"id,omitempty" yaml:"id,omitempty"`
	Name                      *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 name,omitempty" json:"name,omitempty" yaml:"name,omitempty"`
	Size                      *Size                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 size,omitempty" json:"size,omitempty" yaml:"size,omitempty"`
	PreviewUrl                *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 previewUrl,omitempty" json:"previewUrl,omitempty" yaml:"previewUrl,omitempty"`
	PolicyLabels              []*CreativePolicyViolation              `xml:"https://www.google.com/apis/ads/publisher/v202102 policyLabels,omitempty" json:"policyLabels,omitempty" yaml:"policyLabels,omitempty"`
	AppliedLabels             []*AppliedLabel                         `xml:"https://www.google.com/apis/ads/publisher/v202102 appliedLabels,omitempty" json:"appliedLabels,omitempty" yaml:"appliedLabels,omitempty"`
	LastModifiedDateTime      *DateTime                               `xml:"https://www.google.com/apis/ads/publisher/v202102 lastModifiedDateTime,omitempty" json:"lastModifiedDateTime,omitempty" yaml:"lastModifiedDateTime,omitempty"`
	CustomFieldValues         []*BaseCustomFieldValue                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customFieldValues,omitempty" json:"customFieldValues,omitempty" yaml:"customFieldValues,omitempty"`
	ThirdPartyDataDeclaration *ThirdPartyDataDeclaration              `xml:"https://www.google.com/apis/ads/publisher/v202102 thirdPartyDataDeclaration,omitempty" json:"thirdPartyDataDeclaration,omitempty" yaml:"thirdPartyDataDeclaration,omitempty"`
	DestinationUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrl,omitempty" json:"destinationUrl,omitempty" yaml:"destinationUrl,omitempty"`
	DestinationUrlType        *DestinationUrlType                     `xml:"https://www.google.com/apis/ads/publisher/v202102 destinationUrlType,omitempty" json:"destinationUrlType,omitempty" yaml:"destinationUrlType,omitempty"`
	Duration                  *int                                    `xml:"https://www.google.com/apis/ads/publisher/v202102 duration,omitempty" json:"duration,omitempty" yaml:"duration,omitempty"`
	AllowDurationOverride     *bool                                   `xml:"https://www.google.com/apis/ads/publisher/v202102 allowDurationOverride,omitempty" json:"allowDurationOverride,omitempty" yaml:"allowDurationOverride,omitempty"`
	TrackingUrls              []*ConversionEvent_TrackingUrlsMapEntry `xml:"https://www.google.com/apis/ads/publisher/v202102 trackingUrls,omitempty" json:"trackingUrls,omitempty" yaml:"trackingUrls,omitempty"`
	CompanionCreativeIds      []*int64                                `xml:"https://www.google.com/apis/ads/publisher/v202102 companionCreativeIds,omitempty" json:"companionCreativeIds,omitempty" yaml:"companionCreativeIds,omitempty"`
	CustomParameters          *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 customParameters,omitempty" json:"customParameters,omitempty" yaml:"customParameters,omitempty"`
	AdId                      *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 adId,omitempty" json:"adId,omitempty" yaml:"adId,omitempty"`
	AdIdType                  *AdIdType                               `xml:"https://www.google.com/apis/ads/publisher/v202102 adIdType,omitempty" json:"adIdType,omitempty" yaml:"adIdType,omitempty"`
	SkippableAdType           *SkippableAdType                        `xml:"https://www.google.com/apis/ads/publisher/v202102 skippableAdType,omitempty" json:"skippableAdType,omitempty" yaml:"skippableAdType,omitempty"`
	VastPreviewUrl            *string                                 `xml:"https://www.google.com/apis/ads/publisher/v202102 vastPreviewUrl,omitempty" json:"vastPreviewUrl,omitempty" yaml:"vastPreviewUrl,omitempty"`
	SslScanResult             *SslScanResult                          `xml:"https://www.google.com/apis/ads/publisher/v202102 sslScanResult,omitempty" json:"sslScanResult,omitempty" yaml:"sslScanResult,omitempty"`
	SslManualOverride         *SslManualOverride                      `xml:"https://www.google.com/apis/ads/publisher/v202102 sslManualOverride,omitempty" json:"sslManualOverride,omitempty" yaml:"sslManualOverride,omitempty"`
	VideoAssets               []*VideoRedirectAsset                   `xml:"https://www.google.com/apis/ads/publisher/v202102 videoAssets,omitempty" json:"videoAssets,omitempty" yaml:"videoAssets,omitempty"`
	MezzanineFile             *VideoRedirectAsset                     `xml:"https://www.google.com/apis/ads/publisher/v202102 mezzanineFile,omitempty" json:"mezzanineFile,omitempty" yaml:"mezzanineFile,omitempty"`
	TypeAttrXSI               string                                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace             string                                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *VideoRedirectCreative) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:VideoRedirectCreative"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "https://www.google.com/apis/ads/publisher/v202102"
	}
}

// CreateCreatives was auto-generated from WSDL.
type CreateCreatives struct {
	Creatives []*Creative `xml:"https://www.google.com/apis/ads/publisher/v202102 creatives,omitempty" json:"creatives,omitempty" yaml:"creatives,omitempty"`
}

// CreateCreativesResponse was auto-generated from WSDL.
type CreateCreativesResponse struct {
	Rval []*Creative `xml:"https://www.google.com/apis/ads/publisher/v202102 rval,omitempty" json:"rval,omitempty" yaml:"rval,omitempty"`
}

// GetCreativesByStatement was auto-generated from WSDL.
type GetCreativesByStatement struct {
	FilterStatement *Statement `xml:"https://www.google.com/apis/ads/publisher/v202102 filterStatement,omitempty" json:"filterStatement,omitempty" yaml:"filterStatement,omitempty"`
}

// GetCreativesByStatementResponse was auto-generated from WSDL.
type GetCreativesByStatementResponse struct {
	Rval *CreativePage `xml:"https://www.google.com/apis/ads/publisher/v202102 rval,omitempty" json:"rval,omitempty" yaml:"rval,omitempty"`
}

// PerformCreativeAction was auto-generated from WSDL.
type PerformCreativeAction struct {
	CreativeAction  *CreativeAction `xml:"https://www.google.com/apis/ads/publisher/v202102 creativeAction,omitempty" json:"creativeAction,omitempty" yaml:"creativeAction,omitempty"`
	FilterStatement *Statement      `xml:"https://www.google.com/apis/ads/publisher/v202102 filterStatement,omitempty" json:"filterStatement,omitempty" yaml:"filterStatement,omitempty"`
}

// PerformCreativeActionResponse was auto-generated from WSDL.
type PerformCreativeActionResponse struct {
	Rval *UpdateResult `xml:"https://www.google.com/apis/ads/publisher/v202102 rval,omitempty" json:"rval,omitempty" yaml:"rval,omitempty"`
}

// UpdateCreatives was auto-generated from WSDL.
type UpdateCreatives struct {
	Creatives []*Creative `xml:"https://www.google.com/apis/ads/publisher/v202102 creatives,omitempty" json:"creatives,omitempty" yaml:"creatives,omitempty"`
}

// UpdateCreativesResponse was auto-generated from WSDL.
type UpdateCreativesResponse struct {
	Rval []*Creative `xml:"https://www.google.com/apis/ads/publisher/v202102 rval,omitempty" json:"rval,omitempty" yaml:"rval,omitempty"`
}

// Operation wrapper for CreateCreatives.
// OperationCreateCreativesRequest was auto-generated from WSDL.
type OperationCreateCreativesRequest struct {
	CreateCreatives *CreateCreatives `xml:"https://www.google.com/apis/ads/publisher/v202102 createCreatives,omitempty" json:"createCreatives,omitempty" yaml:"createCreatives,omitempty"`
}

// Operation wrapper for CreateCreatives.
// OperationCreateCreativesResponse was auto-generated from WSDL.
type OperationCreateCreativesResponse struct {
	CreateCreativesResponse *CreateCreativesResponse `xml:"https://www.google.com/apis/ads/publisher/v202102 createCreativesResponse,omitempty" json:"createCreativesResponse,omitempty" yaml:"createCreativesResponse,omitempty"`
}

// Operation wrapper for GetCreativesByStatement.
// OperationGetCreativesByStatementRequest was auto-generated from
// WSDL.
type OperationGetCreativesByStatementRequest struct {
	GetCreativesByStatement *GetCreativesByStatement `xml:"https://www.google.com/apis/ads/publisher/v202102 getCreativesByStatement,omitempty" json:"getCreativesByStatement,omitempty" yaml:"getCreativesByStatement,omitempty"`
}

// Operation wrapper for GetCreativesByStatement.
// OperationGetCreativesByStatementResponse was auto-generated
// from WSDL.
type OperationGetCreativesByStatementResponse struct {
	GetCreativesByStatementResponse *GetCreativesByStatementResponse `xml:"https://www.google.com/apis/ads/publisher/v202102 getCreativesByStatementResponse,omitempty" json:"getCreativesByStatementResponse,omitempty" yaml:"getCreativesByStatementResponse,omitempty"`
}

// Operation wrapper for PerformCreativeAction.
// OperationPerformCreativeActionRequest was auto-generated from
// WSDL.
type OperationPerformCreativeActionRequest struct {
	PerformCreativeAction *PerformCreativeAction `xml:"https://www.google.com/apis/ads/publisher/v202102 performCreativeAction,omitempty" json:"performCreativeAction,omitempty" yaml:"performCreativeAction,omitempty"`
}

// Operation wrapper for PerformCreativeAction.
// OperationPerformCreativeActionResponse was auto-generated from
// WSDL.
type OperationPerformCreativeActionResponse struct {
	PerformCreativeActionResponse *PerformCreativeActionResponse `xml:"https://www.google.com/apis/ads/publisher/v202102 performCreativeActionResponse,omitempty" json:"performCreativeActionResponse,omitempty" yaml:"performCreativeActionResponse,omitempty"`
}

// Operation wrapper for UpdateCreatives.
// OperationUpdateCreativesRequest was auto-generated from WSDL.
type OperationUpdateCreativesRequest struct {
	UpdateCreatives *UpdateCreatives `xml:"https://www.google.com/apis/ads/publisher/v202102 updateCreatives,omitempty" json:"updateCreatives,omitempty" yaml:"updateCreatives,omitempty"`
}

// Operation wrapper for UpdateCreatives.
// OperationUpdateCreativesResponse was auto-generated from WSDL.
type OperationUpdateCreativesResponse struct {
	UpdateCreativesResponse *UpdateCreativesResponse `xml:"https://www.google.com/apis/ads/publisher/v202102 updateCreativesResponse,omitempty" json:"updateCreativesResponse,omitempty" yaml:"updateCreativesResponse,omitempty"`
}

// creativeServiceInterface implements the CreativeServiceInterface interface.
type creativeServiceInterface struct {
	cli *soap.Client
}

// Creates new {@link Creative} objects.                  @param
// creatives the creatives to create         @return the created
// creatives with their IDs filled in
func (p *creativeServiceInterface) CreateCreatives(CreateCreatives *CreateCreatives) (*CreateCreativesResponse, error) {
	α := struct {
		OperationCreateCreativesRequest `xml:"tns:createCreatives"`
	}{
		OperationCreateCreativesRequest{
			CreateCreatives,
		},
	}

	γ := struct {
		OperationCreateCreativesResponse `xml:"createCreativesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("CreateCreatives", α, &γ); err != nil {
		return nil, err
	}
	return γ.CreateCreativesResponse, nil
}

// Gets a {@link CreativePage} of {@link Creative} objects that
// satisfy the         given {@link Statement#query}. The following
// fields are supported for         filtering:
//  <table>         <tr>         <th scope="col">PQL Property</th>
// <th scope="col">Object Property</th>         </tr>         <tr>
//         <td>{@code id}</td>         <td>{@link Creative#id}</td>
//         </tr>         <tr>         <td>{@code name}</td>
//      <td>{@link Creative#name}</td>         </tr>         <tr>
//         <td>{@code advertiserId}</td>         <td>{@link Creative#advertiserId}</td>
//         </tr>         <tr>         <td>{@code width}</td>
//       <td>{@link Creative#size}</td>         </tr>         <tr>
//         <td>{@code height}</td>         <td>{@link Creative#size}</td>
//         </tr>         <tr>         <td>{@code lastModifiedDateTime}</td>
//         <td>{@link Creative#lastModifiedDateTime}</td>
//    </tr>         </table>                  @param filterStatement
// a Publisher Query Language statement used to filter
// a set of creatives         @return the creatives that match
// the given filter
func (p *creativeServiceInterface) GetCreativesByStatement(GetCreativesByStatement *GetCreativesByStatement) (*GetCreativesByStatementResponse, error) {
	α := struct {
		OperationGetCreativesByStatementRequest `xml:"tns:getCreativesByStatement"`
	}{
		OperationGetCreativesByStatementRequest{
			GetCreativesByStatement,
		},
	}

	γ := struct {
		OperationGetCreativesByStatementResponse `xml:"getCreativesByStatementResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("GetCreativesByStatement", α, &γ); err != nil {
		return nil, err
	}
	return γ.GetCreativesByStatementResponse, nil
}

// Performs action on {@link Creative} objects that match the given
// {@link Statement#query}.                  @param creativeAction
// the action to perform         @param filterStatement a Publisher
// Query Language statement used to filter a set of creatives
//        @return the result of the action performed
func (p *creativeServiceInterface) PerformCreativeAction(PerformCreativeAction *PerformCreativeAction) (*PerformCreativeActionResponse, error) {
	α := struct {
		OperationPerformCreativeActionRequest `xml:"tns:performCreativeAction"`
	}{
		OperationPerformCreativeActionRequest{
			PerformCreativeAction,
		},
	}

	γ := struct {
		OperationPerformCreativeActionResponse `xml:"performCreativeActionResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("PerformCreativeAction", α, &γ); err != nil {
		return nil, err
	}
	return γ.PerformCreativeActionResponse, nil
}

// Updates the specified {@link Creative} objects.
//      @param creatives the creatives to update         @return
// the updated creatives
func (p *creativeServiceInterface) UpdateCreatives(UpdateCreatives *UpdateCreatives) (*UpdateCreativesResponse, error) {
	α := struct {
		OperationUpdateCreativesRequest `xml:"tns:updateCreatives"`
	}{
		OperationUpdateCreativesRequest{
			UpdateCreatives,
		},
	}

	γ := struct {
		OperationUpdateCreativesResponse `xml:"updateCreativesResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("UpdateCreatives", α, &γ); err != nil {
		return nil, err
	}
	return γ.UpdateCreativesResponse, nil
}
